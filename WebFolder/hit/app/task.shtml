<!--HIT_EXECUTE

if(_HIT_AuthenticateSession="Session-Authenticated-OK")
//_HIT_HTMLTXT:="<h1>AUTH</h1>"
C_TEXT(_HIT_HTMLTXT)
C_LONGINT(_HIT_COUNTER)

QUERY([Tasks];[Tasks]uuid=_HIT_WebApp_GetField ("uuid"))

C_BOOLEAN (mtaskBoolen)
mtaskBoolen:=(Records in selection([Employees])=1)


QUERY([Projects];[Projects]proj_id=num([Tasks]proj_id))
QUERY([Timeslips];[Timeslips]task_id=[Tasks]task_id)

C_TEXT(_HIT_TSTXT)
C_LONGINT(iCounter)
_HIT_TSTXT:=""
For (iCounter;1;Records in selection([Timeslips]))

QUERY([Employees];[Employees]emp_id=[Timeslips]emp_id)

_HIT_TSTXT:=_HIT_TSTXT+"<tr class='item-row' ><td class='item-id'>"+[Employees]emp_first_name+" "+[Employees]emp_last_name+"</td><td >"+[Timeslips]slip_description+"</td><td>"+string([Timeslips]slip_hours)+"</td><td ><a href='timeslip.shtml?uuid="+[Timeslips]uuid+"' >Edit</a></td></tr>"								

NEXT RECORD([Timeslips])
End for 

C_BOOLEAN(mUserIsCurrentBool)
mUserIsCurrentBool:=(_HIT_WebSession_GetVar ("auth_user_type")="CLIENTS")

else
_HIT_HTTPD_RedirectToURL ("/hit/sign-in.shtml?url="+HTTPD_DocumentURI)
end if 

-->

<!--#4DIF (_HIT_AuthenticateSession="Session-Authenticated-OK")-->
<!DOCTYPE html>
<html>
<head>
	<title>Tenthmatrix CRM App : Task</title>
	<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
	<meta name="viewport" content="width=device-width, initial-scale=1.0">
	<!-- bootstrap -->
	<link rel="stylesheet" href="bootstrap/css/bootstrap.min.css" />
    <link rel="stylesheet" href="bootstrap/css/bootstrap-responsive.min.css" />
    <!--#4DSCRIPT/_HIT_LoadInclude/hit/app/includes/header.shtml-->
	
    <!--[if lt IE 9]>
      <script src="http://html5shim.googlecode.com/svn/trunk/html5.js"></script>
    <![endif]-->
    
    <style type="text/css">
		
	.custom-combobox {
    position: relative;
    display: inline-block;
  }
  .custom-combobox-toggle {
    position: absolute;
    top: 0;
    bottom: 0;
    margin-left: -1px;
    padding: 0;
    /* support: IE7 */
    *height: 1.7em;
    *top: 0.1em;
  }
  .custom-combobox-input {
    margin: 0;
    padding: 0.3em;
  }
  .ui-state-default, .ui-widget-content .ui-state-default, .ui-widget-header .ui-state-default {
  	width:auto;
	height:auto;
	 background: none repeat scroll 0% 0% #FFF;
	 border: 1px solid #B6B6B6;
  }
  .ui-autocomplete{
  	max-height:300px;
	overflow:scroll;
  }
  
  .ui-autocomplete li a{
  	color: #737f8d;
	text-shadow: 1px 1px 1px #fff;
  }
  .ui-widget-content {
    border: 1px solid #B6B6B6;
	width: 275px;
	}

	#items textarea {
	width:300px;
	height: 20px;
	}
	.rate{
	width:50px;
	}
	.hours{
	width:50px;
	}
	
  #message, #tax_message{
	color:#FF0000;
}
	</style>

</head>
<body>

	<!-- main container -->
    <div class="content wide-content">
        <div class="container-fluid">
            <div id="pad-wrapper" class="form-page">
				<div class="row-fluid">
					<div class="">
						
						<form name="TaskForm" action="savetask.cgi" class="form-comment form_validation_reg" method="post" >
							<div class="tabbable">
								<ul class="nav nav-tabs">
									<li id="li1" class="active"><a href="#tab1" data-toggle="tab">Task Details</a></li>
									<li id="li2"><a href="#tab2" data-toggle="tab">Related Timeslips</a></li>
									<li id="li3"><a href="#tab3" data-toggle="tab">Related Tasks</a></li>
								</ul>
							</div>
							<div class="tab-content">
								<div class="tab-pane active" id="tab1">
									<div class="row-fluid">
										<div class="span12">
											<div class="row-fluid">
												<div class="span7">
													<div class="form-horizontal well">
														<fieldset>
															<div class="control-group">
																<label class="control-label">Task Name <span class="f_req">*</span></label>
																<div class="controls">
																<input name="tsk_id" type="hidden" value="<!--#4DVAR [Tasks]task_id-->" id="tsk_id">
																<input name="Task_uuid" class="span5" type="hidden" value="<!--HIT_EXECUTE _HIT_HTMLTXT:=_HIT_WebApp_GetField ("uuid")-->" id="Task_uuid">
																<input name="Task_Name" class="span5" type="text" value="<!--#4DVAR [Tasks]task_name-->" id="Task_Name"><br/>
								
																</div>
															</div>
															
															<div class="control-group">
																<label class="control-label">Reported By </label>
																<div class="controls">
																	<Select name="uuid_reported_by" id="uuid_reported_by">
																	<option value="">--Select Employee--</option>
<!--HIT_EXECUTE
_HIT_HTMLTXT:=""
QUERY([Employees];[Employees]emp_active=True)
ORDER BY([Employees];[Employees]emp_last_name;>)

For (_HIT_COUNTER;1;Records in selection([Employees]))
_HIT_HTMLTXT:=_HIT_HTMLTXT+"<option value=\""+[Employees]uuid+"\""
If ([Tasks]uuid_reported_by=[Employees]uuid)
_HIT_HTMLTXT:=_HIT_HTMLTXT+" selected"
Else 
End if 
_HIT_HTMLTXT:=_HIT_HTMLTXT+">"+[Employees]emp_first_name+" "+[Employees]emp_last_name+"</option>"
NEXT RECORD([Employees])
End for 
-->
									</select>   
																</div>
															</div>
															<div class="control-group">
																<label class="control-label">Project Name <span class="f_req">*</span></label>
																<div class="controls" >
																	<div class="ui-widget">
									<Select name="Project_ID" id="Project_ID">
									<!--#4DIF (Records in selection([Tasks])=0)-->
										<option value=""></option>
									<!--#4DSCRIPT/Web_LoadProjects/-->
									<!--4DLOOP [Projects]-->
										<option value="<!--#4DVAR [Projects]proj_id-->" ><!--4DVAR [Projects]proj_name--></option>
									<!--4DENDLOOP-->
									<!--#4DELSE-->
										 <option value="<!--4DVAR [Projects]proj_id-->" selected><!--4DVAR [Projects]proj_name--></option>									 
										 <!--#4DENDIF-->
									</select>                                     
								</div>
																</div>
															</div>
															<div class="control-group">
																<label class="control-label">Task Start Date </label>
																<div class="controls">
																<div class="input-append date" id="dp1">
																	<input name="task_start_date" class="span10" type="text" data-date-format="dd/mm/yyyy" <!--#4DIF (timestamp_unix_toDate([Tasks]Timestamp_start)=!01/01/1970!)-->value=""<!--4DELSE-->value="<!--#4DVAR timestamp_unix_toDate([Tasks]Timestamp_start)-->"<!--4DENDIF--> id="task_start_date" readonly ><span class="add-on"><i class="splashy-calendar_day"></i></span>
																	</div>
																</div>
															</div>
															
															<div class="control-group">
																<label class="control-label">Task End Date</label>
																 <div class="controls" >
																 <div class="input-append date" id="dp2">
																	<input name="task_end_date" class="span10" type="text" data-date-format="dd/mm/yyyy" <!--#4DIF (timestamp_unix_toDate ([Tasks]Timestamp_end)=!01/01/1970!)-->value=""<!--4DELSE-->value="<!--#4DVAR timestamp_unix_toDate ([Tasks]Timestamp_end)-->"<!--4DENDIF--> id="task_end_date" readonly ><span class="add-on"><i class="splashy-calendar_day"></i></span>
																	</div>
																	</div>
																	
															</div>
															
												<div class="control-group">
																<label class="control-label">Task Estimated Hour <span class="f_req">*</span></label>
																<div class="controls">
																	<input name="Task_Estimated_Hour" class="span5 num" type="text" value="<!--#4DVAR [Tasks]task_estimated_hours-->" id="Task_Estimated_Hour">                                    <br/>
																</div>
															</div>
															<div class="control-group">
																<label class="control-label">Task Rate  </label>
																<div class="controls" >
																	<input name="Task_Rate" class="span5 num" type="text" value="<!--#4DVAR [Tasks]task_rate-->" id="Task_Rate">
																</div>
															</div>
															<div class="control-group">
																<label class="control-label">Status</label>
																<div class="controls">
																	<Select name="Task_Status" id="Task_Status"> mtaskBoolen
									<!--#4DIF (Records in selection([Tasks])=0)-->
									<option value="assigned" >assigned</option>
									<!--#4DELSE-->
									<!--HIT_EXECUTE _HIT_HTMLTXT:=Task_Status_HTMLPopup-->
									 <!--#4DENDIF-->
									</select>
									<Select type="hidden"name="Task_Status_old" id="Task_Status_old" style="display:none">
									<!--#4DIF (Records in selection([Tasks])=0)-->
									<option value="assigned" >assigned</option>
									<!--#4DELSE-->
									<!--HIT_EXECUTE _HIT_HTMLTXT:=Task_Status_HTMLPopup-->
									<!--#4DENDIF-->
									</select>   
																</div>
															</div>
															<div class="control-group">
																<label class="control-label">Assigned to</label>
																<div class="controls">
																	<Select name="uuid_assigned_to" id="uuid_assigned_to">
																	<option value="">--Select Employee--</option>
<!--HIT_EXECUTE
_HIT_HTMLTXT:=""
QUERY([Employees];[Employees]emp_active=True)
ORDER BY([Employees];[Employees]emp_last_name;>)

For (_HIT_COUNTER;1;Records in selection([Employees]))
_HIT_HTMLTXT:=_HIT_HTMLTXT+"<option value=\""+[Employees]uuid+"\""
If ([Tasks]uuid_assigned_to=[Employees]uuid)
_HIT_HTMLTXT:=_HIT_HTMLTXT+" selected"
Else 
End if 
_HIT_HTMLTXT:=_HIT_HTMLTXT+">"+[Employees]emp_first_name+" "+[Employees]emp_last_name+"</option>"
NEXT RECORD([Employees])
End for 
-->
									</select>   
																</div>
															</div>
															<div class="control-group">
																<label class="control-label">Task Active</label>
																<div class="controls">
																	<Select name="Task_Active" id="Task_Active" name="Task_Active">
									<!--#4DIF (Records in selection([Tasks])=1)-->
										<option value="Active" <!--#4DIF ([Tasks]task_active=True)-->selected<!--4DELSE--><!--4DENDIF-->>Active</option>
										<option value="Done" <!--#4DIF ([Tasks]task_active=false)-->selected<!--4DELSE--><!--4DENDIF-->>Done</option>
									<!--#4DELSE-->
										<option value="Active">Active</option>
										<!--#4DENDIF-->
									</select>
																</div>
															</div>
															
															
												<!--#4DIF (Records in selection([Tasks])=1)-->
							<div class="control-group">
								<h3 style="font-size:14px; margin:0px 0 10px 0; padding-left:0px; font-weight:bold;">Attached Files</h3>
                                <table class="table file-table table-condensed table-striped  table-hover" >
              					<thead>
                					<tr>
                  						<!-- <th>File</th> -->
                  						<th>File Name</th>
                  						<th>Delete</th>
                  						<th>Download</th>
                					</tr>
              					</thead>
              					<tbody>
              					<!--#4DSCRIPT/Web_LoadDocumentFile/-->	
			  					<!--#4DLOOP [Documents]--><!-- row -->
                				<tr>
                  					<!-- <td width="30">1</td> -->
                  					<td><a title="<!--#4DHTMLVAR [Documents]filename-->" target="_blank" href="<!--#4DHTMLVAR [Documents]doc_path-->"><!--#4DHTMLVAR [Documents]filename--></a></td>
                  					<td width="75" ><a href="javascript:void(0)" onClick="del_file('<!--#4DHTMLVAR [Documents]uuid-->', $(this))"><i class="icon-remove" style="color:#f00;"></i></a ></td>
                  					<td width="75"><a href="javascript:void(0)" onClick="download_file('<!--#4DHTMLVAR [Documents]uuid-->')"><i class="icon-download-alt"></i></a></td>                
                				</tr>
                				<!--#4DENDLOOP-->
              					</tbody>
           				 		</table>
							</div>
							<div class="control-group">
								<label class="control-label">Upload File</label>
								<div class="controls">
									<input name="file_content" type="file" id="file_content">
									<button type="button" class="btn btn-info" onClick="add_file()" >Upload</button>
								</div>
                            </div>
															
								<!--#4DENDIF-->												
								
															
														</fieldset>
													</div>
												</div>
												
												<!--#4DIF (Records in selection([Tasks])=1)-->
												<div class="span5">
													<div class="well form-inline">
														
														
							
								<h3>Notes</h3><br>
								<!--#4DSCRIPT/Web_LoadTaskNotes/-->	
								<!--#4DLOOP [Task_Notes]--><!-- row -->
								<div class="control-group notes">							
									<label class="control-label"><!--#4DHTMLVAR [Task_Notes]tasknote_user_name--> (<!--4DHTMLVAR timestamp_unix_toGMT ([Task_Notes]Timestamp_modified)-->) (Note: <!--#4DHTMLVAR [Task_Notes]tasknote_ID-->)</label>
									<div class="controls">
									
									<input class="note_uuid" type="hidden" value="<!--#4DHTMLVAR [Task_Notes]uuid-->" />
									<textarea name="note" class="span12 note" rows="2" id="note" readonly> <!--#4DHTMLVAR [Task_Notes]Task_Note--></textarea>
									<br/>
									<button type="button" id="edit" class="btn-glow" onClick="editNote($(this))">Edit Note</button>
									<button type="button" id="save" class="btn-glow" onClick="saveNote($(this))" style="display:none">Save Note</button>&nbsp;
									<button type="button" id="delete" class="btn-glow" onClick="deleteNote($(this))">Delete</button>									
									<button type="button" id="cancel" class="btn-glow" onClick="cancelNote($(this))" style="display:none">Cancel</button>
									
									</div>
								</div>
								<!--#4DENDLOOP-->
								
								<!--<div class='notes_end'></div>-->
							
							<div class="control-group notes_end">
								<label class="control-label">Add Note</label>
								<div class="controls">
								
								<textarea name="Add_note" class="span12" rows="2" id="Add_note"></textarea>
								<br/>
								<button type="button" id="add" class="btn-glow" onClick="addNote()">Add Note</button>
								
								</div>
							</div>			
													</div>
												</div>
									<!--#4DELSE--><!--#4DENDIF-->			
												
											</div>
										</div>
									</div>
								</div>
								<div class="tab-pane" id="tab2">
									<div class="row-fluid">
										<div class="span12">
											<div class="row-fluid">
												<div class="span9">
													<div class="form-horizontal well">
														<fieldset>
															<table id="items" class="items table table-condensed table-striped" data-provides="rowlink">
								<thead>
									<tr class="item">
										<th>Employee</th>
		      <th>Description</th>
		      <th>Hours</th>
		      
			  <th >Edit</th>
			  </tr>
			  </thead>
			   <tbody>
									<!--HIT_EXECUTE IF (Records in selection([Task])=1)
		   _HIT_HTMLTXT:=_HIT_TSTXT
		  END IF-->
<tr id="hiderow">
		    <td colspan="4"><a href="timeslip.shtml" title="Add a row">Add new Timeslip</a></td>
		  </tr>
							
								  </tbody>
								</table>	<br/>
								</fieldset>
													</div>
												</div>
												
											</div>
										</div>
									</div>
								</div>
								
								<div class="tab-pane" id="tab3">
									<div class="row-fluid">
										<div class="span12">
											<div class="row-fluid">
												<div class="span9">
													<div class="form-horizontal well">
														<fieldset>
															<table id="items" class="items table table-condensed table-striped" data-provides="rowlink">
								<thead>
									<tr class="item">
										<th>Relationship</th>
		      <th>Task Name</th>
		      <th>Status</th>	      
			  <th >Delete</th>
			  </tr>
			  </thead>
			   <tbody>
									<!--#4DSCRIPT/Web_LoadRelatedTask/-->
		  <!--#4DLOOP [Related_Task]--><!--#4DSCRIPT/Web_LoadRelatedTaskRelated/-->	
		  <tr class="item-row">
		      <td><!--#4DHTMLVAR [Related_Task]Relationship--></td>
		      <td><!--#4DHTMLVAR [Tasks]task_name--></td>
		      <td><!--#4DHTMLVAR [Tasks]task_status--></td>	      
			  <td ><a href="javascript:void(0)" onClick="del_relation('<!--#4DHTMLVAR [Related_Task]uuid-->', $(this))" >Delete</a></td>			  
		  </tr>
		  <!--#4DENDLOOP-->
							
								  </tbody>
								</table>	<br/>
								
				<h3>New Relationship</h3>
		<br/>
		<div class="control-group">
								<label class="control-label">Current Issue</label>
			<div class="controls" >
				<Select name="current_issue" id="current_issue" >
					<option value="parent of" >parent of</option>
					<option value="child of" >child of</option>
					<option value="duplicate of">duplicate of</option>
					<option value="has duplicate">has duplicate</option>
					<option value="related to">related to</option>
				</select>                                    
			</div>
		</div>
		
		<div class="control-group">
								<label class="control-label">Task Name </label>
								<div class="controls" >
																	<div class="ui-widget">
									<select name="Task_ID" id="Task_ID">
										<option value=""></option>
									<!--#4DSCRIPT/Web_LoadTasks/-->
									<!--4DLOOP  [Tasks]-->
											<option value="<!--4DVAR [Tasks]task_id-->" <!--#4DIF ([Tasks]task_id= Num(_HIT_WebApp_GetField ("task_id")))-->selected<!--4DELSE--><!--4DENDIF-->><!--4DVAR [Tasks]task_name--></option>
									<!--4DENDLOOP-->									
									</select>
									</div>
								</div>
							</div>
				<div class="control-group">
								<label class="control-label"></label>
					<div class="controls" >			
				<button type="button" class="btn-glow primary" onClick="add_relation()" >Add</button>
					</div>
				</div>
								
								</fieldset>
													</div>
												</div>
												
											</div>
										</div>
									</div>
								</div>
								
								
							</div>
							<div class="span9 field-box" style="text-align: center;">
						<input type="submit" name="Submit" class="btn-glow primary" value="Submit">    
								
								<span>OR</span>
								<a href="tasks.shtml">Cancel</a>
							<!--<input type="reset" value="Cancel" class="reset">-->
					</div>
						</form>
					</div>
				</div>
		
            </div>
		</div>
    </div>
    <!-- end main container -->

<!--HIT_EXECUTE
		C_TEXT(_HIT_NAMETXT)
		IF (_HIT_WebSession_GetVar ("auth_user_type")="CLIENTS")
		If (Web_isUserClient )
		_HIT_NAMETXT:=[Contacts]First name+" "+[Contacts]Surname
		Else 
		_HIT_NAMETXT:="Admin"
		End if 
		ELSE
		 If (Web_isUserStaff)
		_HIT_NAMETXT:=[Employees]emp_first_name+" "+[Employees]emp_last_name
		Else 
		_HIT_NAMETXT:="Admin"
		End if
		END IF
	-->

	<!-- scripts -->
	<script src="js/jquery.min.js"></script>
    <script src="bootstrap/js/bootstrap.min.js"></script>

	<script type="text/javascript" src="js/jquery-impromptu.js"></script>
	<script src="lib/validation/jquery.validate.min.js"></script>
 	<script src="js/jquery.colorbox.js"></script>
 	<script src="js/jquery-ui-1.9.1.custom.js"></script>
  	<script src="lib/datepicker/bootstrap-datepicker.min.js"></script>
	
	<script>
	 var xhr;
  (function( $ ) {
    $.widget( "custom.combobox", {
      _create: function() {
        this.wrapper = $( "<span>" )
          .addClass( "custom-combobox" )
          .insertAfter( this.element );
 
        this.element.hide();
        this._createAutocomplete();
        this._createShowAllButton();
      },
 
      _createAutocomplete: function() {
        var selected = this.element.children( ":selected" ),
          value = selected.val() ? selected.text() : "";
 
        this.input = $( "<input>" )
          .appendTo( this.wrapper )
          .val( value )
          .attr( "title", "" )
          .addClass( "custom-combobox-input ui-widget ui-widget-content ui-state-default ui-corner-left" )
          .autocomplete({
            delay: 0,
            minLength: 0,
            source: $.proxy( this, "_source" )
          })
          .tooltip({
            tooltipClass: "ui-state-highlight"
          });
 
        this._on( this.input, {
          autocompleteselect: function( event, ui ) {
		  	//alert("show all");
            ui.item.option.selected = true;
			
            this._trigger( "select", event, {
              item: ui.item.option
            });
          },
 
          autocompletechange: "_removeIfInvalid"
        });
      },
 
      _createShowAllButton: function() {
        var input = this.input,
          wasOpen = false;
 
        $( "<a>" )
          .attr( "tabIndex", -1 )
          .attr( "title", "Show All Items" )
          .tooltip()
          .appendTo( this.wrapper )
          .button({
            icons: {
              primary: "ui-icon-triangle-1-s"
            },
            text: false
          })
          .removeClass( "ui-corner-all" )
          .addClass( "custom-combobox-toggle ui-corner-right" )
          .mousedown(function() {
            wasOpen = input.autocomplete( "widget" ).is( ":visible" );
          })
          .click(function() {
            input.focus();
 
            // Close if already visible
            if ( wasOpen ) {
              return;
            }
 
            // Pass last search string as value to search for, displaying last results
            input.autocomplete( "search", 'SHOWALL' );
          });
      },
 
      _source: function( request, response ) {
        //var matcher = new RegExp( $.ui.autocomplete.escapeRegex(request.term), "i" );
		var ele_select= this.element;
		if(request.term=='SHOWALL'){
			response(ele_select.children( "option" ).map(function() {
          var text = $( this ).text();
		 var value= $( this ).val();
          //if ( this.value && ( !request.term || matcher.test(text) ) )
            return {
              label: text,
              value: text,
              option: this
            };
        }) );
		
		}
		else
		{
		if(ele_select.attr('id')=='Project_ID'){
		var jsonRow = 'getprojectsonsearch.cgi?srch='+request.term;
		}
		else if(ele_select.attr('id')=='Task_ID'){
			var jsonRow = 'gettaskonsearch.cgi?srch='+request.term;
		}
		

		//alert(jsonRowURLStr);
		if(xhr) xhr.abort();
		xhr=$.getJSON(jsonRow,function(result){
			
			if(result){
				var html='<option value=""></option>';

				$.each(result, function(i,item)
				{
					html += '<option value="'+item.id+'">'+item.value+'</option>';
				});
				ele_select.html(html);
				
				
				response(ele_select.children( "option" ).map(function() {
          var text = $( this ).text();
		 var value= $( this ).val();
          //if ( this.value && ( !request.term || matcher.test(text) ) )
            return {
              label: text,
              value: text,
              option: this
            };
        }) );
				
				
			}
		});
       
	  } 
		
      },
 
      _removeIfInvalid: function( event, ui ) {
 
        // Selected an item, nothing to do
        if ( ui.item ) {

          return;
        }
 
        // Search for a match (case-insensitive)
        var value = this.input.val(),
          valueLowerCase = value.toLowerCase(),
          valid = false;
        this.element.children( "option" ).each(function() {
          if ( $( this ).text().toLowerCase() === valueLowerCase ) {
            this.selected = valid = true;	
			
            return false;
          }
        });
 
        // Found a match, nothing to do
        if ( valid ) {
          return;
        }
 
        // Remove invalid value
        this.input
          .val( "" )
          .attr( "title", value + " didn't match any item" )
          .tooltip( "open" );
        this.element.val( "" );
        this._delay(function() {
          this.input.tooltip( "close" ).attr( "title", "" );
        }, 2500 );
        this.input.data( "ui-autocomplete" ).term = "";
      },
 
      _destroy: function() {
        this.wrapper.remove();
        this.element.show();
      }
    });
  })( jQuery );
 
  $(function() {
    $( "#Project_ID" ).combobox();
   $( "#Task_ID" ).combobox();
  });

  </script>
	
	<script type="text/javascript">
function editNote(x)
{
	var note = x.parents('.notes');
	note.find("#note").attr('readonly',false);
	note.find('#edit').hide();
	note.find('#delete').hide();
	note.find('#save').show();
	note.find('#cancel').show();
}
function cancelNote(x) {
	var note = x.parents('.notes');
	note.find('#edit').show();
	note.find('#delete').show();
	note.find('#save').hide();
	note.find("#note").attr('readonly',true);
	note.find('#cancel').hide();
}
function deleteNote(x) {
	var note = x.parents('.notes');
	var uuid_note= note.find('.note_uuid').val();
	var Task_uuid=$('#Task_uuid').val();

	var dataString = 'deletenotes_uuid='+uuid_note+'&redirect=false';

	$.ajax({
	type: "POST",
	url: "deletetasksnotes.cgi",
	data: dataString,
	cache: false,
	success: function(html)
	{
		note.hide();
	}
	});
}	
function saveNote(x)
{	
	var note = x.parents('.notes');
	var uuid_note= note.find('.note_uuid').val();
	var add_note=note.find('#note').val();
	var Task_uuid=$('#Task_uuid').val();
	var Task_Name=$('#Task_Name').val();
	var uuid_reported_by=$('#uuid_reported_by').val();
	
	if(add_note!='') {
		var dataString = 'note='+add_note+'&tasknote_uuid='+uuid_note+'&uuid_task='+Task_uuid+'&redirect=false';
		
		$.ajax({
		type: "GET",
		url: "savetasknotes.cgi",
		data: dataString,
		cache: false,
		success: function(html)
		{
			//row.find('.item_uuid').val(html);
			//document.getElementById("note").readOnly=true;
			note.find("#note").attr('readonly',true);
			note.find('#save').hide();
			note.find('#cancel').hide();
			note.find('#edit').show();
			note.find('#delete').show();
		}
		});
	}else{
		alert('Please add some note');
	}
}
function addNote()
{
	var add_note=$('#Add_note').val();
	var Task_uuid=$('#Task_uuid').val();
	 
	
	if(add_note!='') {
		var dataString = 'note='+add_note+'&uuid_task='+Task_uuid+'&redirect=false';
	
		$.ajax({
		type: "GET",
		url: "savetasknotes.cgi",
		data: dataString,
		cache: false,
		success: function(html)
		{
			//alert(html);
			var result=html.split(",");
			var note_uuid= result[0];
			var date_time= result[1]+','+result[2];
			var noteid= result[3];
			$("#Add_note").val("");
			var username="<!--HIT_EXECUTE _HIT_HTMLTXT:= _HIT_NAMETXT -->";
			
			$(".notes_end").before('<div class="control-group notes"><label class="control-label">'+username+' ('+date_time+') (Note: '+noteid+')</label><div class="controls"><input class="note_uuid" type="hidden" value="'+note_uuid+'" /><textarea name="note" class="span12 note" rows="2" id="note" readonly>'+add_note+'</textarea><br/><button type="button" id="edit" class="btn-glow" onClick="editNote($(this))">Edit Note</button><button type="button" id="save" class="btn-glow" onClick="saveNote($(this))" style="display:none">Save Note</button>&nbsp;<button type="button" id="delete" class="btn-glow" onClick="deleteNote($(this))">Delete</button><button type="button" id="cancel" class="btn-glow" onClick="cancelNote($(this))" style="display:none">Cancel</button></div></div>');
			
		}
		});
	}else{
		alert('Please add some note');
	}
}

function add_file(){
	//$('#TaskForm').attr('action', 'upload_file.cgi');
	//$('#TaskForm').submit();
	if ($('#file_content')[0].files && $('#file_content')[0].files[0]) {
		var val = $('#file_content').val().toLowerCase();   

				var data = new FormData();
				var files= $('#file_content')[0].files;
				var Task_uuid=$('#Task_uuid').val();
				data.append('Task_uuid', Task_uuid);
				var tsk_id=$('#tsk_id').val();
				data.append('tsk_id', tsk_id);
				$.each(files, function(key, value)
				{
					data.append('file_content', value);
				});

				
				$.ajax({
					url: 'upload_file.cgi?files',
					type: 'POST',
					data: data,
					cache: false,
					dataType: 'json',
					processData: false, // Don't process the files
					contentType: false, // Set content type to false as jQuery will tell the server its a query string request
					success: function(data)
					{
						var statesdemo = {
										state0: {
											title: data.Result,
											buttons: { OK : 0 },
											submit:function(e,v,m,f){ 
												if(v==0) {
													e.preventDefault();
													$.prompt.close();
													if(data.Result=='File Uploaded Successfully.'){
														location.reload(true);
													}
												}
											}
										},
										
										
									};
									$.prompt(statesdemo);
					},

				});
		
			
	}
	else{
		alert('Please select File to upload');
		document.TaskForm.file_content.focus() ;
		return false;
	}
}

function del_file(del_uuid, ref){
	var Task_uuid=$('#Task_uuid').val();
	var task_id=$('#tsk_id').val();

	var dataString = 'DocumentUUID='+del_uuid+'&task_id='+task_id+'&uuid_task='+Task_uuid+'&redirect=false';

	$.ajax({
		type: "GET",
		url: "deletetaskfile.cgi",
		data: dataString,
		dataType: 'json',
		cache: false,
		success: function(html)
		{
			if(html.Success){
			var title=html.Success;
			}
			else{
			var title=html.Error;
			}
			var statesdemo = {
				state0: {
					title: title,
					buttons: { OK : 0 },
					submit:function(e,v,m,f){ 
						if(v==0) {
							if(html.Success){
								ref.parents('tr').remove();
							}
						}
					}
				},
				
				
			};
			$.prompt(statesdemo);
		}
	});
}

function download_file(del_uuid){

	window.open('task_preview.shtml?document_uuid='+del_uuid+'&token=<!--#4DVAR _HIT_TokenGetAny-->');
	
}

function add_relation(){
	if ($('#Task_ID').val()=="")
	{ 
		alert('Please Specify Task Name');
		$('#Task_ID').focus();
		return false;
	}
	else if($('#Task_ID').val()==$('#tsk_id').val()){
		alert('Please Specify some other Task Name');
		$('#Task_ID').focus();
		return false;
	}
	else{
		var relation=$('#current_issue').val();
		var rel_task_id=$('#Task_ID').val();
		var Task_uuid=$('#Task_uuid').val();
		var task_id=$('#tsk_id').val();
		var task_name=$('#Task_ID option:selected').text();

		var dataString = 'relation='+relation+'&rel_task_id='+rel_task_id+'&task_id='+task_id+'&uuid_task='+Task_uuid+'&redirect=false';
	
		$.ajax({
			type: "GET",
			url: "saverelatedtask.cgi",
			data: dataString,
			dataType: 'json',
			cache: false,
			success: function(html)
			{
				if(html.Success){
					$('#tab3 table#items').append('<tr class="item-row"><td>'+relation+'</td><td>'+task_name+'</td><td>assigned</td><td ><a href="javascript:void(0)" onClick="del_relation(\''+html.UUID+'\', $(this))" >Delete</a></td></tr>');
				}
			}
		});
	}	
}

function del_relation(del_uuid, ref){
	var Task_uuid=$('#Task_uuid').val();
	var task_id=$('#tsk_id').val();

	var dataString = 'del_uuid='+del_uuid+'&task_id='+task_id+'&uuid_task='+Task_uuid+'&redirect=false';

	$.ajax({
		type: "GET",
		url: "delrelatedtask.cgi",
		data: dataString,
		dataType: 'json',
		cache: false,
		success: function(html)
		{
			ref.parents('tr').remove();
		}
	});
}



$(function() {
	$( "#tabs" ).tabs();
	
	$('#task_start_date').datepicker({"autoclose": true}).on('changeDate', function (ev) {
				var arrStartDate= $('#task_start_date').val().split('/');
				var dateText = new Date(arrStartDate[1]+'/'+arrStartDate[0]+'/'+arrStartDate[2]);
				
				$('#task_end_date').datepicker('setStartDate', dateText);
			});
	$('#task_end_date').datepicker({"autoclose": true}).on('changeDate', function (ev) {
				var arrEndDate= $('#task_end_date').val().split('/');
				var dateText = new Date(arrEndDate[1]+'/'+arrEndDate[0]+'/'+arrEndDate[2]);
				
				$('#task_start_date').datepicker('setEndDate', dateText);
			});
			var arrStartDate= $('#task_start_date').val().split('/');
			var dateText = new Date(arrStartDate[1]+'/'+arrStartDate[0]+'/'+arrStartDate[2]);			
			$('#task_end_date').datepicker('setStartDate', dateText);
			var arrEndDate= $('#task_end_date').val().split('/');
			var dateText = new Date(arrEndDate[1]+'/'+arrEndDate[0]+'/'+arrEndDate[2]);			
			$('#task_start_date').datepicker('setEndDate', dateText);
		
		$('#dp1 i.splashy-calendar_day').click(function(){
			$('#task_start_date').datepicker( "show" );
		});
		$('#dp2 i.splashy-calendar_day').click(function(){
			$('#task_end_date').datepicker( "show" );
		});
		
		
		$(document).click(function(event){
			//console.log($(event.target).closest('div').attr('id'));
			if($(event.target).closest('div').attr('id')!='dp1') {
				$('#task_start_date').datepicker( "hide" );
			}
			if($(event.target).closest('div').attr('id')!='dp2') {
				$('#task_end_date').datepicker( "hide" );
			}			
		});
		
		var val_flag=0;
		$('.form_validation_reg').validate({
				ignore: "",
				onkeyup: false,
				errorClass: 'error',
				validClass: 'valid',
				highlight: function(element) {
					$(element).closest('div').addClass("f_error");
					var err_div_id=$(element).closest('div.tab-pane').attr('id');
					if($("#"+err_div_id).hasClass("active")){
					
					val_flag=1;
					}								
					else if(!$("#"+err_div_id).hasClass("active") && val_flag==0){
					//$(element).closest('div').addClass("f_error");
						for(var i=1; i<=2; i++) {
							if(err_div_id=="tab"+i){
								$("#tab"+i).addClass("active");
								$("#li"+i).addClass("active");

							}
							else {
								$("#tab"+i).removeClass("active");
								$("#li"+i).removeClass("active");
							}
						}
					}
				},
				unhighlight: function(element) {
					$(element).closest('div').removeClass("f_error");
				},
				errorPlacement: function(error, element) {
					$(element).closest('div').append(error);
				},
				rules: {
					Task_Name: { required: true },
					Project_ID: { required: true },
					uuid_reported_by: { required: true },
					uuid_assigned_to: { required: true },
					Task_Estimated_Hour: { number: true},
					Task_Rate: { number: true},
				},
			});
		
});
</script>


</body>
</html><!--#4DELSE--><h1>Authentication Required!<br>
<!--HIT_EXECUTE _HIT_HTMLTXT:="_HIT_AuthenticateSession: "+_HIT_AuthenticateSession-->
</h1><!--#4DENDIF-->