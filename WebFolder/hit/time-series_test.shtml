<!DOCTYPE html>
<html>
<head>
	<title>Detail Admin - Home</title>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8">
	<meta name="viewport" content="width=device-width, initial-scale=1.0">
	
    <!--#4DSCRIPT/_HIT_LoadInclude/hit/includes/header.shtml-->
    

	<link rel="stylesheet" href="css/base/jquery-ui.css" />

    <!-- this page specific styles -->
    <link rel="stylesheet" href="css/compiled/index.css" type="text/css" media="screen" />   
	
	<link rel="stylesheet" href="css/autocomplete.css" />


    <!--[if lt IE 9]>
      <script src="http://html5shim.googlecode.com/svn/trunk/html5.js"></script>
    <![endif]-->
</head>
<body>

<!--#4DSCRIPT/_HIT_LoadInclude/hit/includes/navbar.shtml-->

<!--#4DSCRIPT/_HIT_LoadInclude/hit/includes/navigation.shtml-->



	<!-- main container -->
    <div class="content">

        <!-- settings changer 
        <div class="skins-nav">
            <a href="#" class="skin first_nav selected">
                <span class="icon"></span><span class="text">Default skin</span>
            </a>
            <a href="#" class="skin second_nav" data-file="css/skins/dark.css">
                <span class="icon"></span><span class="text">Dark skin</span>
            </a>
        </div>
-->
        <div class="container-fluid">

            <!-- upper main stats -->
            <div id="main-stats">
                <div class="row-fluid stats-row">
                    <div class="span3 stat">
                        <div class="data">
                            <span class="number"><!--HIT_EXECUTE
Web_LoadProjects 
_HIT_HTMLTXT:=String(Records in selection([Projects]))

--> </span>
                            projects
                        </div>
                        <span class="date">Today</span>
                    </div>
                    <div class="span3 stat">
                        <div class="data">
                            <span class="number"><!--HIT_EXECUTE
QUERY([Tasks];[Tasks]task_active=True)
_HIT_HTMLTXT:=String(Records in selection([Tasks]))
-->
</span>
                            active tasks
                        </div>
                        <span class="date"><!--HIT_EXECUTE _HIT_HTMLTXT:=timestamp_unix_toGMT([Tasks]Timestamp_modified)--></span>
                    </div>
                    <div class="span3 stat">
                        <div class="data">
                            <span class="number"><!--HIT_EXECUTE 
                            QUERY([Tasks];[Tasks]task_active=True)
RELATE MANY SELECTION([Timeslips]task_id)
_HIT_HTMLTXT:=String(Records in selection([Timeslips]))

                            --></span>
                            time slips
                        </div>
                        <span class="date"><!--HIT_EXECUTE _HIT_HTMLTXT:=timestamp_unix_toGMT([Tasks]Timestamp_modified)--></span>
                    </div>
                    <div class="span3 stat last">
                        <div class="data">
                            <span class="number">$2,340</span>
                            budget spent
                        </div>
                        <span class="date">last 30 days</span>
                    </div>
                </div>
            </div>
            <!-- end upper main stats -->

            <div id="pad-wrapper">
			
				
					Project &nbsp;
					<div class="ui-widget"  style="display:inline;padding-right:20px;">
									<Select name="Project_ID" id="Project_ID">
									
										<option value=""></option>
									<!--#4DSCRIPT/Web_LoadProjects/-->
									<!--4DLOOP [Projects]-->
										<option value="<!--#4DVAR [Projects]proj_id-->" ><!--4DVAR [Projects]proj_name--></option>
									<!--4DENDLOOP--> 
									
									</select>
								</div>
					
						<input type="button" class="btn-glow primary" value="Submit" id="btn_redraw">		
					</form>
					</div>
				
                <!-- statistics chart built with jQuery Flot -->
                <div class="row-fluid chart">
				
					
					 
					
                    <div class="span12">
					   <div id="container" style="min-width: 310px; height: 400px; margin: 0 auto"></div>
                    </div>
                </div>
                <!-- end statistics chart -->
            </div>
        </div>
    </div>


	<!-- scripts -->
    <!--#4DSCRIPT/_HIT_LoadInclude/hit/includes/footer.shtml--> 
   <script src="js/ui/jquery-ui.js"></script>
    <script src="js/bootstrap.datepicker.js"></script>
    <script src="js/jquery.uniform.min.js"></script>
	<!-- charts -->
	<script src="https://code.highcharts.com/highcharts.js"></script>
	<script src="https://code.highcharts.com/modules/exporting.js"></script>

	
	<script type="text/javascript">
	var hours=new Array();
	var project_id='', project_name='', proj_start_date='';
	$(function () {
		$( "#Project_ID" ).combobox();
		//get_data();	
		$("#Project_ID").change(function(){
			project_id=$(this).val();
		});
		$('#btn_redraw').click(function(){
			if(project_id!=''){
				get_data();
			}
			else{
				alert("Please select project");
			}
		});
    });
	
	function get_data(){
		var jsonRow = 'project_work.cgi?project_id='+project_id;
			
			$.getJSON(jsonRow,function(result){
				hours=new Array();
				var arr_start_date=result[0].StartDate.split('/');
				proj_start_date=Date.UTC(Number(arr_start_date[2]), Number(arr_start_date[1])-1, Number(arr_start_date[0])),
				$.each(result, function(i,item)
				{
					var hrs=Math.round(item.Hours * 100)/100;
					hours.push(hrs);					
				});
				console.log(hours);
				load_chart();
			});
	}
    
function load_chart() {
        $('#container').highcharts({
            chart: {
                zoomType: 'x',
                spacingRight: 20
            },
            title: {
                text: $("#Project_ID option:selected").text()+' Work'
            },
            subtitle: {
                text: document.ontouchstart === undefined ?
                    'Click and drag in the plot area to zoom in' :
                    'Pinch the chart to zoom in'
            },
            xAxis: {
                type: 'datetime',
                maxZoom: 14 * 24 * 3600000, // fourteen days
                title: {
                    text: null
                }
            },
            yAxis: {
                title: {
                    text: 'Hours'
                }
            },
            tooltip: {
                shared: true
            },
            legend: {
                enabled: false
            },
            plotOptions: {
                area: {
                    fillColor: {
                        linearGradient: { x1: 0, y1: 0, x2: 0, y2: 1},
                        stops: [
                            [0, Highcharts.getOptions().colors[0]],
                            [1, Highcharts.Color(Highcharts.getOptions().colors[0]).setOpacity(0).get('rgba')]
                        ]
                    },
                    lineWidth: 1,
                    marker: {
                        enabled: false
                    },
                    shadow: false,
                    states: {
                        hover: {
                            lineWidth: 1
                        }
                    },
                    threshold: null
                }
            },
    
            series: [{
                type: 'area',
                name: 'Hours',
                pointInterval: 24 * 3600 * 1000,
                pointStart: proj_start_date,
                data: hours
            }]
        });
		}
		
    </script>
	
	<script>
	 var xhr;
  (function( $ ) {
    $.widget( "custom.combobox", {
      _create: function() {
        this.wrapper = $( "<span>" )
          .addClass( "custom-combobox" )
          .insertAfter( this.element );
 
        this.element.hide();
        this._createAutocomplete();
        this._createShowAllButton();
      },
 
      _createAutocomplete: function() {
	  var ele_select= this.element;
        var selected = this.element.children( ":selected" ),
          value = selected.val() ? selected.text() : "";
 
        this.input = $( "<input>" )
          .appendTo( this.wrapper )
          .val( value )
          .attr( "title", "" )
          .addClass( "custom-combobox-input ui-widget ui-widget-content ui-state-default ui-corner-left" )
          .autocomplete({
            delay: 0,
            minLength: 0,
            source: $.proxy( this, "_source" )
          })
          .tooltip({
            tooltipClass: "ui-state-highlight"
          });
 
        this._on( this.input, {
          autocompleteselect: function( event, ui ) {
		  	//alert("show all");
            ui.item.option.selected = true;
			
            this._trigger( "select", event, {
              item: ui.item.option
            });
			ele_select.trigger('change');
          },
 
          autocompletechange: "_removeIfInvalid"
        });
      },
 
      _createShowAllButton: function() {
        var input = this.input,
          wasOpen = false;
 
        $( "<a>" )
          .attr( "tabIndex", -1 )
          .attr( "title", "Show All Items" )
          .tooltip()
          .appendTo( this.wrapper )
          .button({
            icons: {
              primary: "ui-icon-triangle-1-s"
            },
            text: false
          })
          .removeClass( "ui-corner-all" )
          .addClass( "custom-combobox-toggle ui-corner-right" )
          .mousedown(function() {
            wasOpen = input.autocomplete( "widget" ).is( ":visible" );
          })
          .click(function() {
            input.focus();
 
            // Close if already visible
            if ( wasOpen ) {
              return;
            }
 
            // Pass last search string as value to search for, displaying last results
            input.autocomplete( "search", 'SHOWALL' );
          });
      },
 
      _source: function( request, response ) {
        //var matcher = new RegExp( $.ui.autocomplete.escapeRegex(request.term), "i" );
		var ele_select= this.element;
		if(request.term=='SHOWALL'){
			response(ele_select.children( "option" ).map(function() {
          var text = $( this ).text();
		 var value= $( this ).val();
          //if ( this.value && ( !request.term || matcher.test(text) ) )
            return {
              label: text,
              value: text,
              option: this
            };
        }) );
		
		}
		else
		{
		var jsonRow = 'getprojectsonsearch.cgi?srch='+request.term;

		//alert(jsonRowURLStr);
		if(xhr) xhr.abort();
		xhr=$.getJSON(jsonRow,function(result){
			
			if(result){
				var html='<option value=""></option>';

				$.each(result, function(i,item)
				{
					html += '<option value="'+item.id+'">'+item.value+'</option>';
				});
				ele_select.html(html);
				
				
				response(ele_select.children( "option" ).map(function() {
          var text = $( this ).text();
		 var value= $( this ).val();
          //if ( this.value && ( !request.term || matcher.test(text) ) )
            return {
              label: text,
              value: text,
              option: this
            };
        }) );
				
				
			}
		});
       
	  } 
		
      },
 
      _removeIfInvalid: function( event, ui ) {
 
        // Selected an item, nothing to do
        if ( ui.item ) {

          return;
        }
 
        // Search for a match (case-insensitive)
        var value = this.input.val(),
          valueLowerCase = value.toLowerCase(),
          valid = false;
		  var ele_select= this.element;
        this.element.children( "option" ).each(function() {
          if ( $( this ).text().toLowerCase() === valueLowerCase ) {
            this.selected = valid = true;	
			ele_select.trigger('change');
            return false;
          }
        });
 
        // Found a match, nothing to do
        if ( valid ) {
          return;
        }
 
        // Remove invalid value
        this.input
          .val( "" )
          .attr( "title", value + " didn't match any item" )
          .tooltip( "open" );
        this.element.val( "" );
        this._delay(function() {
          this.input.tooltip( "close" ).attr( "title", "" );
        }, 2500 );
        this.input.data( "ui-autocomplete" ).term = "";
      },
 
      _destroy: function() {
        this.wrapper.remove();
        this.element.show();
      }
    });
  })( jQuery );
 


  </script>
	
</body>
</html>