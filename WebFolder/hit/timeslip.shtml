<!--HIT_EXECUTE

C_TEXT(_HIT_HTMLTXT)
C_LONGINT(_HIT_COUNTER)
C_BOOLEAN(mUserIsCurrentBool)
C_TEXT(_HTMLTITLETXT;pUserUUIDStr;pUserTask)

if(_HIT_AuthenticateSession="Session-Authenticated-OK")

QUERY([Timeslips];[Timeslips]uuid=_HIT_WebApp_GetField ("uuid"))
mUserIsCurrentBool:=(_HIT_WebSession_GetVar ("auth_user_type")="CLIENTS")
QUERY([Employees];[Employees]emp_id=[Timeslips]emp_id)

IF (Records in selection([Timeslips])=0)
_HTMLTITLETXT:="New Timeslip"

If(_HIT_WebApp_GetField ("task_id")#"")
pUserTask:=_HIT_WebApp_GetField ("task_id")
Else
pUserUUIDStr:=_HIT_WebSession_GetVar ("auth_user_uuid")
pUserTask:=User_GetPreferences (pUserUUIDStr;"task_id")
End If
QUERY([Tasks];[Tasks]task_id=num(pUserTask))

ELSE
_HTMLTITLETXT:= "Edit Timeslip"

QUERY([Tasks];[Tasks]task_id=[Timeslips]task_id)

END IF

else
_HIT_HTTPD_RedirectToURL ("sign-in.shtml")
end if 

-->
<!DOCTYPE html>
<html>
<head>
	<!--#4DSCRIPT/_HIT_LoadInclude/hit/includes/header.shtml-->
	 <link href="css/bootstrap.datepicker.css" type="text/css" rel="stylesheet">
	<link rel="stylesheet" type="text/css" href="css/jquery.ptTimeSelect.css" />
	<link rel="stylesheet" href="css/autocomplete.css" />
	<style>
	#ptTimeSelectCntr{
		/*z-index: 1100!important;*/
	}
	
	.ui-widget-header{
		margin: 1px 1px 3px 1px;
		* Permalink - use to edit and share this gradient: http://colorzilla.com/gradient-editor/#ffffff+0,e5e5e5+100;White+3D */
background: #ffffff; /* Old browsers */
background: -moz-linear-gradient(top, #ffffff 0%, #e5e5e5 100%); /* FF3.6-15 */
background: -webkit-linear-gradient(top, #ffffff 0%,#e5e5e5 100%); /* Chrome10-25,Safari5.1-6 */
background: linear-gradient(to bottom, #ffffff 0%,#e5e5e5 100%); /* W3C, IE10+, FF16+, Chrome26+, Opera12+, Safari7+ */
filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#ffffff', endColorstr='#e5e5e5',GradientType=0 ); /* IE6-9 */
border: 1px solid #d3d3d3;

		
	}
	#timeslipnew .custom-combobox-input {
    width: 190% !important;
}
	
	</style>
</head>
<body class="hold-transition skin-blue sidebar-mini">
<div class="wrapper">

	<!--#4DSCRIPT/_HIT_LoadInclude/hit/includes/navbar.shtml-->

    <!--#4DSCRIPT/_HIT_LoadInclude/hit/includes/navigation.shtml-->

	<!-- main container -->
    <div class="content-wrapper">
    <!-- Content Header (Page header) -->
    <section class="content-header">
      <h1>
        <!--#4DIF (Records in selection([Timeslips])=1)-->Edit<!--#4DELSE-->New<!--#4DENDIF--> TimeSlip
    </h1>
      <ol class="breadcrumb">
        <li><a href="index.shtml"><i class="fa fa-dashboard"></i> Home</a></li>
        <li class="active"><!--#4DIF (Records in selection([Timeslips])=1)-->Edit<!--#4DELSE-->New<!--#4DENDIF--> TimeSlip</li>
      </ol>
    </section>

    <!-- Main content -->
    <section class="content">
   		<div class="row">
       		<div class="panel-body no-padding-top bg-white"> 
				<div class=" col-sm-12 col-lg-8">
						<form name="Timeslip" ID="timeslipnew" action="savetimeslip.cgi" class="form-horizontal" method="post">         
							<div class="form-group">
    							<label for="" class="col-sm-3 control-label">Task Name <span style="color:#6E829B">*</span></label>
								<div class="ui-widget col-sm-9">
									<select name="Task_ID" id="Task_ID" CLASS="form-control">
									<!--#4DIF (Records in selection([Timeslips])=0)-->
										<!--#4DIF (pUserTask="")-->
										<option value=""></option>
										<!--#4DSCRIPT/Web_LoadTasks/-->
										<!--4DLOOP  [Tasks]-->
											<option value="<!--4DVAR [Tasks]task_id-->"><!--4DVAR [Tasks]task_name--></option>
										<!--4DENDLOOP-->
										<!--#4DELSE-->
											<option value="<!--4DVAR [Tasks]task_id-->" selected><!--4DVAR [Tasks]task_name--></option>									 
										<!--#4DENDIF-->
									<!--#4DELSE-->
										 <option value="<!--4DVAR [Tasks]task_id-->" selected><!--4DVAR [Tasks]task_name--></option>									 
									<!--#4DENDIF-->
									</select>
								</div>
							</div> 
							<div class="form-group">
    							<label for="" class="col-sm-3 control-label">Employee Name</label>
								<div class="ui-select col-sm-9">
									<select name="Employee_ID" id="Employee_ID" class="form-control">
									<!--HIT_EXECUTE _HIT_HTMLTXT:=Web_TimeSlipEmpHTMLPopup([Timeslips]uuid_employee)-->
									</select>
								</div>
                            </div>
                            <input name="Timeslip_uuid" class="span9" type="hidden" value="<!--HIT_EXECUTE _HIT_HTMLTXT:=_HIT_WebApp_GetField ("uuid")-->" id="Timeslip_uuid">                      
                            <div class="form-group">
    							<label for="" class="col-sm-3 control-label">Slip Start Date <span style="color:#6E829B">*</span></label>	
								<div class="col-sm-6  ">					
                             		<input <!--#4DIF (mUserIsCurrentBool)--> class="input-large time " <!--#4DELSE--> class="input-large datepicker time form-control" <!--#4DENDIF--> type="text"  data-date-format="dd/mm/yyyy" <!--#4DIF (timestamp_unix_toDate([Timeslips]Timestamp_start)=!01/01/1970!)-->value="<!--#4DHTMLVAR Current date -->"<!--4DELSE-->value="<!--#4DHTMLVAR timestamp_unix_toDate([Timeslips]Timestamp_start)-->"<!--4DENDIF--> name="Slip_Date" id="Slip_Date"  readonly>
                            	</div>
                            </div>
							
							 <div class="form-group">
    							<label for="" class="col-sm-3 control-label">Slip Timer Started </label>
    							<div class="col-sm-3">	
									<input <!--#4DIF (mUserIsCurrentBool)-->readonly <!--#4DELSE--><!--#4DENDIF-->class="time timePicker form-control" type="text" value="<!--#4DVAR timestamp_unix_toTime ([Timeslips]Timestamp_start)-->" name="Slip_TimerStarted" id="setStartTime" >&nbsp;&nbsp;&nbsp;
								</div>
								<!--#4DIF (mUserIsCurrentBool)--> <!--#4DELSE-->
								<div class="col-sm-3">	
									<button id="StartTimeButton" type="button">Set current time</button>
								</div>
								<!--#4DENDIF-->
                            </div>
							<div class="form-group">
    							<label for="" class="col-sm-3 control-label">Slip End Date </label>
                                <div class="col-sm-6  ">
                                	<input <!--#4DIF (mUserIsCurrentBool)--> class="input-large time " <!--#4DELSE--> class="input-large datepicker time form-control" <!--#4DENDIF--> data-date-format="dd/mm/yyyy" type="text" <!--#4DIF (timestamp_unix_toDate([Timeslips]Timestamp_end)=!01/01/1970!)-->value="<!--#4DHTMLVAR Current date -->"<!--4DELSE-->value="<!--#4DHTMLVAR timestamp_unix_toDate([Timeslips]Timestamp_end)-->"<!--4DENDIF--> name="Slip_EndDate" id="Slip_EndDate"  readonly>
                            	</div>
                            </div>
							<div class="form-group">
    							<label for="" class="col-sm-3 control-label">Slip Timer End </label>
    							<div class="col-sm-3">
									<input <!--#4DIF (mUserIsCurrentBool)-->readonly <!--#4DELSE--><!--#4DENDIF-->class="time timePicker form-control" type="text" value="<!--#4DVAR timestamp_unix_toTime ([Timeslips]Timestamp_end)-->" name="Slip_Timer_End" id="setEndTIme">&nbsp;&nbsp;&nbsp;
								</div>  
								<!--#4DIF (mUserIsCurrentBool)--> <!--#4DELSE-->
								<div class="col-sm-3">
									<button id="EndTimeButton" type="button">Set current time</button>
								</div>     
								<!--#4DENDIF-->      	
                            </div>
                            
                            <div class="form-group">
    							<label for="" class="col-sm-3 control-label">Break time </label>
								<span id="err_msg" style="color:#FF0000"></span>
								<input class="lunchinterval" type="checkbox" style="margin-left:10px; margin-right:5px;margin-top:-2px;" <!--#4DIF (mUserIsCurrentBool)-->disabled <!--#4DELSE--><!--#4DIF ([Timeslips]exclude_lunch)-->checked disabled<!--4DELSE--><!--4DENDIF--><!--#4DENDIF--> name="lunchinterval" id="lunchinterval" value="true"> Exclude break time 
                           		<span style="display:none;" class="intervalTimeSpan"></span>
                           		<input name="intervalTime" id="intervalTime" type="hidden" value="<!--#4DVAR [Timeslips]interval_time-->" readonly>
                           		<input type="hidden" id="exclude_lunch" name="exclude_lunch" value="off" readonly>
                           	</div>
                           	
							<div class="field-box breakTimeClass" style="display:none;">
                                <label></label>
								Start Time: &nbsp;<input <!--#4DIF (mUserIsCurrentBool)-->readonly <!--#4DELSE--><!--#4DENDIF-->class="time brkTimePicker span1" type="text" value="" name="setBreakStartTime" id="setBreakStartTime">&nbsp;&nbsp;End Time:&nbsp;
								<input <!--#4DIF (mUserIsCurrentBool)-->readonly <!--#4DELSE--><!--#4DENDIF-->class="time brkTimePicker span1" type="text" value="" name="setBreakEndTime" id="setBreakEndTime">&nbsp;&nbsp;&nbsp;
                           		<span id="Errmessage" style="color:#FF0000"></span>
                            </div>
                            <div class="form-group">
    							<label for="" class="col-sm-3 control-label">Slip Hours </label>
								<span id="err_msg" style="color:#FF0000"></span>
								<div class="col-sm-6  ">
								<input class="form-control num" name="Slip_Hours" id="Slip_Hours" type="text" value="<!--#4DVAR [Timeslips]slip_hours-->" readonly>
								</div>
                           	</div>
                           	
                           	<div class="form-group" <!--#4DIF ([Timeslips]interval_time=0)-->style="display:none;"<!--#4DENDIF-->>
                                <label for="" class="col-sm-3 control-label">Lunch Break </label>
								<span id="err_msg" style="color:#FF0000"></span>
								<div class="col-sm-6  ">
									<input class="form-control num" name="interval_time" id="interval_time" type="text" value="<!--#4DVAR [Timeslips]interval_time*60--> minutes" readonly>
								</div>
                           	</div>
                           	
                           	
							<div class="form-group">
    							<label for="" class="col-sm-3 control-label">Slip Description <span style="color:#6E829B">*</span></label>
    							<div class="col-sm-6  ">
                                	<textarea <!--#4DIF (mUserIsCurrentBool)-->readonly readonly="readonly" <!--#4DELSE--><!--#4DENDIF-->class="form-control" rows="4" name="Slip_Description" id="Slip_Description"><!--#4DVAR [Timeslips]slip_description--></textarea>
                            	</div>
                            </div>                            
                           
                            <div class="form-group">
    							<label for="" class="col-sm-3 control-label">Slip Rate</label>
    							<div class="col-sm-6  ">
									<input <!--#4DIF (mUserIsCurrentBool)-->readonly readonly="readonly" <!--#4DELSE--><!--#4DENDIF-->class="form-control num" name="Slip_Rate" id="Slip_Rate" type="text" value="<!--#4DVAR [Timeslips]slip_rate-->">
                            	</div>
                            </div>
                            <div class="form-group">
   								<label for="" class="col-sm-3 control-label">Slip timer accumulated seconds</label>
   								<div class="col-sm-6  ">
									<input <!--#4DIF (mUserIsCurrentBool)-->readonly readonly="readonly" <!--#4DELSE--><!--#4DENDIF-->type="text" name="slip_timer_accumulated_seconds" class="form-control num" value="<!--#4DVAR [Timeslips]slip_timer_accumulated_seconds-->">                                                           
                            	</div>
                            </div>
                            <div class="form-group">
    							<label for="" class="col-sm-3 control-label">Billing Status</label>
                                    <div class="ui-select col-sm-6  ">
										<select <!--#4DIF (mUserIsCurrentBool)-->readonly readonly="readonly" <!--#4DELSE--><!--#4DENDIF--> class="form-control" id="Billing_Status" name="Billing_Status">
											<option value="0" <!--#4DIF ([Timeslips]billing_status=0)-->selected<!--4DELSE--><!--4DENDIF-->>Non Chargeable</option>
											<option value="1"  <!--#4DIF ([Timeslips]billing_status=1)-->selected<!--4DELSE--><!--4DENDIF-->>Chargeable</option>
											<option value="2"  <!--#4DIF ([Timeslips]billing_status=2)-->selected<!--4DELSE--><!--4DENDIF-->>Billed</option>
										</select>                                     
                                    </div>                                    
                                </div>
							<input name="task_status" class="span9" type="hidden" value="" id="task_status">    
							<input name="add_test_task" class="span9" type="hidden" value="" id="add_test_task">                     
                           
							<div class="example-container">
								<pre class="code" style="display:none;" id="close_task">
									var statesdemo = {
										state0: {
											title: 'Do you want to resolve this task?',
											buttons: { No : 0, Yes: 1 },
											submit:function(e,v,m,f){ 
												if(v==1) {
													e.preventDefault();
													var status= 'resolved';
													$('#task_status').val(status);
													console.log($('#task_status').val(status));
													//document.Timeslip.submit();
													$.prompt.goToState('state1');
												}
												if(v==0) {
													document.Timeslip.submit();
												}
											}
										},
										state1: {
											title: 'Have you tested this task?',
											buttons: { No : 0, Yes: 1 },
											submit:function(e,v,m,f){ 
												if(v==1) {
													//$('#add_test_task').val('yes');
													document.Timeslip.submit();
												}
												if(v==0) {
												    //var status= 'resolved';
													$('#task_status').val('resolved');
													$('#add_test_task').val('yes');
													document.Timeslip.submit();
												}
											}
										},
										
									};
									$.prompt(statesdemo);
								</pre>
								
							</div>
							
							<div class="form-group">
								<label for="" class="col-sm-3 control-label"></label>
                                <div class="ui-select col-sm-6  ">
                                    <!--#4DIF (mUserIsCurrentBool)-->
										<a href="timeslips.shtml" class="btn btn-danger btn-sm ">Go Back</a><
									<!--#4DELSE-->
										<input type="button" class="btn btn-primary btn-color margin-right-5 btn-sm" value="Submit" onClick="return ValidateForm();">
                                   		<a href="timeslips.shtml" class="btn btn-danger btn-sm ">Cancel</a>
                                    <!--#4DENDIF--> 
                                </div>
                            </div>							
                        </form>
                    </div>
                    </div>
				</div>
            </section>
        </div>
    <!-- end main container -->
	<!--#4DSCRIPT/_HIT_LoadInclude/hit/includes/top-footer.shtml-->
</div>
	<!-- scripts for this page -->
   <!--#4DSCRIPT/_HIT_LoadInclude/hit/includes/footer.shtml--> 
   	<script src="js/bootstrap.datepicker.js"></script>
    <script type="text/javascript" src="js/jquery.ptTimeSelect.js"></script>
   	
    <!-- call this page plugins -->
<script language="javascript">
function ValidateForm () {

if (document.Timeslip.Task_ID.value=="")
{ 
	__alertMessage('Please Specify Task Name'); 
	document.Timeslip.Task_ID.focus();
	return false;
}
if (document.Timeslip.Employee_ID.value=="")
{ 
	__alertMessage('Please Specify Employee Name'); 
	document.Timeslip.Employee_ID.focus();
	return false;
}
if (document.Timeslip.Slip_Date.value=="")
{ 
	__alertMessage('Please Specify Slip Start Date'); 
	document.Timeslip.Slip_Date.focus();
	return false;
}
if (document.Timeslip.Slip_Description.value=="")
{ 
	__alertMessage('Please Specify Slip Description'); 
	document.Timeslip.Slip_Description.focus();
	return false;
}
if (document.getElementById('lunchinterval').checked) {
	<!--#4DIF (Records in selection([Timeslips])=1)-->
		
		if (document.Timeslip.interval_time.value==""){
			if (document.Timeslip.setBreakStartTime.value==""){ 
				__alertMessage('Please select interval start time'); 
				return false;
			}
			if (document.Timeslip.setBreakEndTime.value==""){ 
				__alertMessage('Please select interval end time'); 
				return false;
			}
		}
	<!--#4DELSE-->
	
	if (document.Timeslip.setBreakStartTime.value==""){ 
		__alertMessage('Please select interval start time'); 
		return false;
	}
	if (document.Timeslip.setBreakEndTime.value==""){ 
		__alertMessage('Please select interval end time'); 
		return false;
	}
	<!--#4DENDIF-->
}
<!--#4DIF ([Tasks]task_status#"resolved")-->
code = $('#close_task').text();
(new Function(code))();
<!--#4DELSE-->
document.Timeslip.submit();
<!--#4DENDIF-->
}
</script>
<script type="text/javascript">
	$(function () {
	
		// datepicker plugin
		$('#Slip_Date').datepicker({"autoclose": true}).on('changeDate', function (ev) {
			var arrStartDate= $('#Slip_Date').val().split('/');
			var dateText = new Date(arrStartDate[1]+'/'+arrStartDate[0]+'/'+arrStartDate[2]);
			
			$('#Slip_EndDate').datepicker('setStartDate', dateText);
		});
		
		$('#Slip_EndDate').datepicker({"autoclose": true}).on('changeDate', function (ev) {
			var arrEndDate= $('#Slip_EndDate').val().split('/');
			var dateText = new Date(arrEndDate[1]+'/'+arrEndDate[0]+'/'+arrEndDate[2]);
			
			$('#Slip_Date').datepicker('setEndDate', dateText);
		});
		var arrStartDate= $('#Slip_Date').val().split('/');
		var dateText = new Date(arrStartDate[1]+'/'+arrStartDate[0]+'/'+arrStartDate[2]);
			
		$('#Slip_EndDate').datepicker('setStartDate', dateText);
		var arrEndDate= $('#Slip_EndDate').val().split('/');
		var dateText = new Date(arrEndDate[1]+'/'+arrEndDate[0]+'/'+arrEndDate[2]);
			
		$('#Slip_Date').datepicker('setEndDate', dateText);
	});
</script>
<script>
var Start=0;
var End=0;
	
	function __getTime(timeStr){
		//var timeStr= $('#'+div).val();
		//console.log(timeStr);
		
		var s_date=$('#Slip_Date').val();
		var s_date_arr=s_date.split("/");
		if(timeStr!=""){
			var time_arr= timeStr.split(":");
			var s_hour= Number(time_arr[0]);
			var s_min= Number(time_arr[1].substr(0,2));
			var s_ampm= time_arr[1].substr(time_arr[1].length - 2);
			if(s_hour==12){
				s_hour= 0;
			}
			if(s_ampm == 'PM'){
				s_hour= s_hour+12;
			}
							
			var datetimeStr= new Date(s_date_arr[2],s_date_arr[1]-1,s_date_arr[0],s_hour,s_min,'0');
			var actualtime= datetimeStr.getTime();
		}else{
			var actualtime= 0;
		}
		
		//console.log(actualtime);
		return actualtime;				
	}
	function chng_time_format(){
		var s_time=$('#setStartTime').val();
		var e_time=$('#setEndTIme').val();
		var s_time_arr=s_time.split(":");
		var e_time_arr=e_time.split(":");
		var s_hour= Number(s_time_arr[0]);
		var e_hour= Number(e_time_arr[0]);
		var s_min= Number(s_time_arr[1]);
		var e_min= Number(e_time_arr[1]);
		var s_ampm='AM';
		var e_ampm='AM';
		if(s_hour>=12){
			s_ampm='PM';
		}
		if(e_hour>=12){
			e_ampm='PM';
		}
		if(s_hour>12){
			s_hour= s_hour-12;
		}
		if(e_hour>12){
			e_hour= e_hour-12;
		}
		/*if(s_hour<10){
			s_hour= '0'+String(s_hour);
		}
		if(e_hour<10){
			e_hour= '0'+String(e_hour);
		}*/		
		if(s_min<10){
			s_min= '0'+String(s_min);
		}
		if(e_min<10){
			e_min= '0'+String(e_min);
		}
		s_time=s_hour+':'+s_min+' '+s_ampm;
		e_time=e_hour+':'+e_min+' '+e_ampm;	
		$('#setStartTime').val(s_time);
		$('#setEndTIme').val(e_time);	
	}
	function resetIntervalTime(){
		$('#intervalTime').val('');
		$('#exclude_lunch').val("off");
		$('.brkTimePicker').val('');
		$('.breakTimeClass').hide();
		$("input.lunchinterval").attr("checked", false);
		$('.intervalTimeSpan').html('');
		$('.intervalTimeSpan').hide();
		var mainStartTime = $('#setStartTime').val();
		var mainEndTime = $('#setEndTIme').val();
		
		var mainStartTimeStr = __getTime(mainStartTime);
		var mainEndTimeStr = __getTime(mainEndTime);
		if(mainEndTimeStr>=mainStartTimeStr){
			var timeslipsDiff= mainEndTimeStr-mainStartTimeStr;
			var timeslipsMinutes = Math.floor(timeslipsDiff / (1000*60));
			var slipHourStr= (timeslipsMinutes/60).toFixed(2);
			$('#Slip_Hours').val(slipHourStr);	
		}else{
			$('#Slip_Hours').val('');	
		}
	} 
	function evaluateSlipHoursWithBreakTime(){
		var s_time=$('#setBreakStartTime').val();
		var e_time=$('#setBreakEndTime').val();
						
		var mainStartTime = $('#setStartTime').val();
		var mainEndTime = $('#setEndTIme').val();
		
		var mainStartTimeStr = __getTime(mainStartTime);
		var mainEndTimeStr = __getTime(mainEndTime);
												
		if(s_time!='' && e_time!='') {
			var start_time= __getTime(s_time);
							var end_time=  __getTime(e_time);
							var validStartTimeSelectionFlag=false;
							var validEndTimeSelectionFlag=false;
											
							if(start_time>=mainStartTimeStr && mainEndTimeStr>=start_time){
								validStartTimeSelectionFlag=true;
							}
							if(mainEndTimeStr>=end_time && start_time>=mainStartTimeStr){
								validEndTimeSelectionFlag=true;
							}
							
							if(validStartTimeSelectionFlag == true){
								if(validEndTimeSelectionFlag == true){
									if(end_time>=start_time){
										var diff_time= end_time-start_time;
											
										var minutes = Math.floor(diff_time / (1000*60));
										var intervalTimeHrs = (minutes/60).toFixed(2);
										if(intervalTimeHrs>=1){
										var intervalTimeStr = "("+intervalTimeHrs+" hr)";
										}else{
										var intervalTimeStr =  "("+intervalTimeHrs+" hrs)";
										}
										var time_diff= minutes*60;
										$('#Errmessage').html('');
										
										var timeslipsDiff= mainEndTimeStr-mainStartTimeStr;
										var timeslipsMinutes = Math.floor(timeslipsDiff / (1000*60));

										var slipHourStr= (timeslipsMinutes/60).toFixed(2);
										
										var totalSlipSeconds = slipHourStr*3600;
										var evalSeconds= totalSlipSeconds-time_diff;
										var evalHours = (evalSeconds/3600).toFixed(2);
										$('.intervalTimeSpan').html(intervalTimeStr);
										$('.intervalTimeSpan').show();
										$('#Slip_Hours').val(evalHours);	
										$('#intervalTime').val(intervalTimeHrs);
										$('#exclude_lunch').val("on");
									}else if(end_time<start_time){
										$('#Errmessage').html("End date time must be greater than start date time");
										$('#setBreakEndTime').val('');
									}
								}else{
									$('#Errmessage').html('');
									$('#setBreakEndTime').val('');
									$('#Errmessage').html("Break time should lie between timeslip timing!");
								}
							}else{
								$('#Errmessage').html('');
								$('#setBreakStartTime').val('');
								//$('#setBreakEndTime').val('');
								$('#Errmessage').html("Break time should lie between timeslip timing!");
							}
						}else{
							$('#Errmessage').html('');
							$('#Errmessage').html("Please specify both Start and End Interval time!");
						}
	} 
	$(document).ready(function(){
	
		chng_time_format();
	
		<!--#4DIF (Records in selection([Timeslips])=0)-->
		$("#setStartTime").val('');
		$("#setEndTIme").val('');
		<!--#4DELSE--><!--#4DENDIF-->
		 $('#setStartTime').ptTimeSelect({
		 	onClose: function(input, widget){
				$('#setStartTime').trigger('change');
			}
		 });
		  $('#setEndTIme').ptTimeSelect({
		 	onClose: function(input, widget){
				$('#setEndTIme').trigger('change');
			}
		 });
		 $('#setBreakStartTime').ptTimeSelect({
		 	onClose: function(input, widget){
		 		$('#setBreakStartTime').trigger('change');
			}
		});
		$('#setBreakEndTime').ptTimeSelect({
			onClose: function(input, widget){
				$('#setBreakEndTime').trigger('change');
			}
		});
		 
		 $('#StartTimeButton').on('click', function (){
		 	var d = new Date();
			var curr_hour = d.getHours(); 
			var curr_min = d.getMinutes();
			var ampm='AM';
			if(curr_hour>=12){
				ampm='PM';
			}
			if(curr_hour>12){
				curr_hour= curr_hour-12;
			}
			if(curr_min<10){
				curr_min= '0'+String(curr_min);
			}
			var curr_time= curr_hour+':'+curr_min+' '+ampm;			
		  	$('#setStartTime').val(curr_time);
			$('#setStartTime').trigger('change');
			
		}); 
		
		$('#EndTimeButton').on('click', function (){
		 	var d = new Date();
			var curr_hour = d.getHours(); 
			var curr_min = d.getMinutes();
			var ampm='AM';
			if(curr_hour>=12){
				ampm='PM';
			}
			if(curr_hour>12){
				curr_hour= curr_hour-12;
			}
			if(curr_min<10){
				curr_min= '0'+String(curr_min);
			}
			var curr_time= curr_hour+':'+curr_min+' '+ampm;			
		  	$('#setEndTIme').val(curr_time);
			$('#setEndTIme').trigger('change');

		}); 
		
		$(".timePicker").change(function() {
			//resetIntervalTime();
			var s_date=$('#Slip_Date').val();
			var e_date=$('#Slip_EndDate').val();
			var s_time=$('#setStartTime').val();
			var e_time=$('#setEndTIme').val();
			if(e_date==''){
				e_date=s_date;
			}
			if(s_time=='' || e_time==''){
				s_time="12:00 AM";
				e_time="12:00 AM";
			}
			//alert("hi");
			if(s_date!='' && e_date!='' && s_time!='' && e_time!='') {
				
				var s_date_arr=s_date.split("/");
				var e_date_arr=e_date.split("/");
				var s_time_arr=s_time.split(":");
				var e_time_arr=e_time.split(":");
				var s_hour= Number(s_time_arr[0]);
				var e_hour= Number(e_time_arr[0]);
				var s_min= Number(s_time_arr[1].substr(0,2));
				var e_min= Number(e_time_arr[1].substr(0,2));
				var s_ampm= s_time_arr[1].substr(s_time_arr[1].length - 2);
				var e_ampm= e_time_arr[1].substr(e_time_arr[1].length - 2);
				if(s_hour==12){
					s_hour= 0;
				}
				if(e_hour==12){
					e_hour= 0;
				}
				if(s_ampm == 'PM'){
					s_hour= s_hour+12;
				}
				if(e_ampm == 'PM'){
					e_hour= e_hour+12;
				}
				//alert(s_date_arr[2]+','+s_date_arr[1]+','+s_date_arr[0]+','+s_hour+','+s_min);
				//alert(e_date_arr[2]+','+e_date_arr[1]+','+e_date_arr[0]+','+e_hour+','+e_min);
				
				var start_datetime= new Date(s_date_arr[2],s_date_arr[1]-1,s_date_arr[0],s_hour,s_min,'0');
				var end_datetime= new Date(e_date_arr[2],e_date_arr[1]-1,e_date_arr[0],e_hour,e_min,'0');
				var start_time= start_datetime.getTime();
				var end_time= end_datetime.getTime();
				//console.log(start_time+', '+end_time);
				if(end_time>=start_time){
					var diff_time= end_time-start_time;
					
					//alert(diff_time);
					/*var hours = Math.floor(diff_time / (1000*60*60));
					var minutes = Math.floor((diff_time % (1000*60*60)) / (1000*60));
					if(minutes<10){
						minutes='0'+String(minutes);
					}
					var time_diff= hours+'.'+minutes;*/
					
					var minutes = Math.floor(diff_time / (1000*60));

					var time_diff= (minutes/60).toFixed(2);
									
					$('#err_msg').html('');
					
					var breakStartTime=$('#setBreakStartTime').val();
					var breakEndTime=$('#setBreakEndTime').val();
					if(breakStartTime!="" && breakEndTime!=""){			
						var brkStartTimeStr = __getTime(breakStartTime);
						var brkEndTimeStr = __getTime(breakEndTime);
																
						if(brkStartTimeStr>=start_time && end_time>=brkStartTimeStr && end_time>=brkEndTimeStr && brkEndTimeStr>=start_time && brkEndTimeStr>brkStartTimeStr){
							evaluateSlipHoursWithBreakTime();
						}else{
							resetIntervalTime();
							$('#Slip_Hours').val(time_diff);
						}
					}else{
						var interval_time=$('#interval_time').val();
						//alert(interval_time);
						if(interval_time!=""){
							interval_time=<!--#4DVAR [Timeslips]interval_time-->
							var total_hours= time_diff*60;
							var intervalTimeStr= interval_time*60;
							if(total_hours>intervalTimeStr){
								var timeDiffStr=total_hours-intervalTimeStr;
								time_diff= (timeDiffStr/60).toFixed(2);
								//console.log(time_diff);
								$('#Slip_Hours').val(time_diff);
							}else{
								$('#Slip_Hours').val(time_diff);
							}
						}else{
							$('#Slip_Hours').val(time_diff);
						}
					}						
										
				}
				else if(end_time<start_time){
					
					//$('#err_msg').html("End date time must be greater than start date time");
					__alertMessage("End date time must be greater than start date time");
					$('#Slip_EndDate').val('');
					$('#setEndTIme').val('');
					$('#Slip_Hours').val('');
					resetIntervalTime();
				}
			}
		
			
		});
		
		$('#setStartTime').change(function(){
			if($('#setEndTIme').val()==''){
				$('#setEndTIme').val($(this).val());
			}else if($(this).val()==''){
				$('#setEndTIme').val('');
			}
		});
		
		$('#setEndTIme').change(function(){
			if($(this).val()==''){
				$(this).val($('#setEndTIme').val());
			}else if($('#setStartTime').val()==''){
				$('#setStartTime').val($(this).val());
			}
		});
		
		$('.num').keypress(function(e){
			var k = e.which;
    		/* numeric inputs can come from the keypad or the numeric row at the top */
   			if ((k<48 || k>57) && (k!=46) && (k!=8) && (k!=0)) {
        		e.preventDefault();
				//alert("Allowed characters are 0-9, +, -, (, )");
        		return false;
    		}
					
		}); 
					
		$("input.lunchinterval").on("click", function() {
			if($(this).is(":checked")){
				if($('#setStartTime').val()!="" && $('#setEndTime').val()!="" && $('#Slip_Date').val()!="" && $('#Slip_EndDate').val()!=""){
   					$('.breakTimeClass').show();
   				}else{
   					__alertMessage('Please select start/end date and time');
					$("input.lunchinterval").attr("checked", false);
   				}
   			}else{
   				$('.breakTimeClass').hide();
   				resetIntervalTime();
   			}
  		});
  		
  		$(".brkTimePicker").change(function() {	
			evaluateSlipHoursWithBreakTime();
		});
		
	}); 
	
</script>

<script>
	 var xhr;
  (function( $ ) {
    $.widget( "custom.combobox", {
      _create: function() {
        this.wrapper = $( "<span>" )
          .addClass( "custom-combobox" )
          .insertAfter( this.element );
 
        this.element.hide();
        this._createAutocomplete();
        this._createShowAllButton();
      },
 
      _createAutocomplete: function() {
        var selected = this.element.children( ":selected" ),
          value = selected.val() ? selected.text() : "";
 
        this.input = $( "<input>" )
          .appendTo( this.wrapper )
          .val( value )
          .attr( "title", "" )
          .addClass( "custom-combobox-input ui-widget ui-widget-content ui-state-default ui-corner-left" )
          .autocomplete({
            delay: 0,
            minLength: 0,
            source: $.proxy( this, "_source" )
          })
          .tooltip({
            tooltipClass: "ui-state-highlight"
          });
 
        this._on( this.input, {
          autocompleteselect: function( event, ui ) {
		  	//alert("show all");
            ui.item.option.selected = true;
			
            this._trigger( "select", event, {
              item: ui.item.option
            });
          },
 
          autocompletechange: "_removeIfInvalid"
        });
      },
 
      _createShowAllButton: function() {
        var input = this.input,
          wasOpen = false;
 
        $( "<a>" )
          .attr( "tabIndex", -1 )
          .attr( "title", "Show All Items" )
          .tooltip()
          .appendTo( this.wrapper )
          .button({
            icons: {
              primary: "ui-icon-triangle-1-s"
            },
            text: false
          })
          .removeClass( "ui-corner-all" )
          .addClass( "custom-combobox-toggle ui-corner-right" )
          .mousedown(function() {
            wasOpen = input.autocomplete( "widget" ).is( ":visible" );
          })
          .click(function() {
            input.focus();
 
            // Close if already visible
            if ( wasOpen ) {
              return;
            }
 
            // Pass last search string as value to search for, displaying last results
            input.autocomplete( "search", 'SHOWALL' );
          });
      },
 
      _source: function( request, response ) {
        //var matcher = new RegExp( $.ui.autocomplete.escapeRegex(request.term), "i" );
		var ele_select= this.element;
		if(request.term=='SHOWALL'){
			response(ele_select.children( "option" ).map(function() {
          var text = $( this ).text();
		 var value= $( this ).val();
          //if ( this.value && ( !request.term || matcher.test(text) ) )
            return {
              label: text,
              value: text,
              option: this
            };
        }) );
		
		}
		else
		{
		var jsonRow = 'gettaskonsearch.cgi?srch='+request.term+'&closed=false';
		

		//alert(jsonRowURLStr);
		if(xhr) xhr.abort();
		xhr=$.getJSON(jsonRow,function(result){
			
			if(result){
				var html='<option value=""></option>';

				$.each(result, function(i,item)
				{
					html += '<option value="'+item.id+'">'+item.value+'</option>';
				});
				ele_select.html(html);
				
				
				response(ele_select.children( "option" ).map(function() {
          var text = $( this ).text();
		 var value= $( this ).val();
          //if ( this.value && ( !request.term || matcher.test(text) ) )
            return {
              label: text,
              value: text,
              option: this
            };
        }) );
				
				
			}
		});
       
	  } 
		
      },
 
      _removeIfInvalid: function( event, ui ) {
 
        // Selected an item, nothing to do
        if ( ui.item ) {

          return;
        }
 
        // Search for a match (case-insensitive)
        var value = this.input.val(),
          valueLowerCase = value.toLowerCase(),
          valid = false;
        this.element.children( "option" ).each(function() {
          if ( $( this ).text().toLowerCase() === valueLowerCase ) {
            this.selected = valid = true;	
			
            return false;
          }
        });
 
        // Found a match, nothing to do
        if ( valid ) {
          return;
        }
 
        // Remove invalid value
        this.input
          .val( "" )
          .attr( "title", value + " didn't match any item" )
          .tooltip( "open" );
        this.element.val( "" );
        this._delay(function() {
          this.input.tooltip( "close" ).attr( "title", "" );
        }, 2500 );
        this.input.data( "ui-autocomplete" ).term = "";
      },
 
      _destroy: function() {
        this.wrapper.remove();
        this.element.show();
      }
    });
  })( jQuery );
 
  $(function() {
    $( "#Task_ID" ).combobox();
  });

  </script>

</body>
</html>
</html>