<!--HIT_EXECUTE

C_TEXT(_HIT_HTMLTXT)
C_LONGINT(_HIT_COUNTER)

if(_HIT_AuthenticateSession="Session-Authenticated-OK")
QUERY([Tasks];[Tasks]uuid=_HIT_WebApp_GetField ("uuid"))
QUERY([Projects];[Projects]proj_id=num([Tasks]proj_id))
QUERY([Task_Notes];[Task_Notes]uuid_task=_HIT_WebApp_GetField ("uuid"))
//_HIT_HTMLTXT:="<h1>AUTH</h1>"
else
_HIT_HTTPD_RedirectToURL ("sign-in.shtml")
end if 

//_HIT_HTMLTXT:=_HIT_SessionStr
//_HIT_HTMLTXT:=_HIT_WebApp_GetField ("uuid")
_HIT_WebSession_SetVar ("last-clicked-uuid";_HIT_WebApp_GetField ("uuid"))
-->
<!DOCTYPE html>
<html>
<head>
	<!--#4DSCRIPT/_HIT_LoadInclude/hit/includes/header.shtml-->
	<link rel="stylesheet" href="css/base/jquery-ui.css" />
<style>
  .custom-combobox {
    position: relative;
    display: inline-block;
  }
  .custom-combobox-toggle {
    position: absolute;
    top: 0;
    bottom: 0;
    margin-left: -1px;
    padding: 0;
    /* support: IE7 */
    *height: 1.7em;
    *top: 0.1em;
  }
  .custom-combobox-input {
    margin: 0;
    padding: 0.3em;
  }
  .ui-state-default, .ui-widget-content .ui-state-default, .ui-widget-header .ui-state-default {
  	width:auto;
	height:auto;
  }
  .ui-autocomplete{
  	max-height:300px;
	overflow:scroll;
  }
  
  </style>
</head>
<body>

    <!--#4DSCRIPT/_HIT_LoadInclude/hit/includes/navbar.shtml-->

    <!--#4DSCRIPT/_HIT_LoadInclude/hit/includes/navigation.shtml-->

	<!-- main container -->
    <div class="content">
        
        <div class="container-fluid">
            <div id="pad-wrapper" class="form-page">
				 <div class="row-fluid header">
                    <h3><!--#4DIF (Records in selection([Tasks])=1)-->Edit<!--#4DELSE-->New<!--#4DENDIF--> Task</h3>
                </div>
                <div class="row-fluid form-wrapper">
					<!-- left column -->
                    <div class="span9 with-sidebar">
						<form name="TaskForm" action="savetask.cgi" class="form-comment" method="post" onSubmit="return ValidateForm();">
							<div class="span12 field-box">
								<label>Task Name <span style="color:#6E829B">*</span></label>
								<input name="Task_Name" class="span9" type="text" value="<!--#4DVAR [Tasks]task_name-->" id="Task_Name">
							</div>
							<input name="Task_uuid" class="span9" type="hidden" value="<!--HIT_EXECUTE _HIT_HTMLTXT:=_HIT_WebApp_GetField ("uuid")-->" id="Task_uuid">
							
							<div class="field-box">
								<label>Reported By</label>
								<div class="ui-select span5">
									<Select name="uuid_reported_by" id="uuid_reported_by">
<!--HIT_EXECUTE
_HIT_HTMLTXT:=""
QUERY([Employees];[Employees]emp_active=True)
ORDER BY([Employees];[Employees]emp_last_name;>)

For (_HIT_COUNTER;1;Records in selection([Employees]))
_HIT_HTMLTXT:=_HIT_HTMLTXT+"<option value=\""+[Employees]uuid+"\""
If ([Tasks]uuid_reported_by=[Employees]uuid)
_HIT_HTMLTXT:=_HIT_HTMLTXT+" selected"
Else 
End if 
_HIT_HTMLTXT:=_HIT_HTMLTXT+">"+[Employees]emp_first_name+" "+[Employees]emp_last_name+"</option>"
NEXT RECORD([Employees])
End for 
-->
									</select>                                     
								</div>
							</div>                  

							
							<div class="field-box">
								<label>Project Name <span style="color:#6E829B">*</span></label>
								<div class="ui-widget">
									<Select name="Project_ID" id="Project_ID">
									<!--#4DIF (Records in selection([Tasks])=0)-->
										<option value=""></option>
									<!--#4DSCRIPT/Web_LoadProjects/-->
									<!--4DLOOP [Projects]-->
										<option value="<!--#4DVAR [Projects]proj_id-->" ><!--4DVAR [Projects]proj_name--></option>
									<!--4DENDLOOP-->
									<!--#4DELSE-->
										 <option value="<!--4DVAR [Projects]proj_id-->" selected><!--4DVAR [Projects]proj_name--></option>									 
										 <!--#4DENDIF-->
									</select>                                     
								</div>
							</div>							
							<div class="field-box">
                                <label>Task Start Date <span style="color:#6E829B">*</span></label>
								
								<input name="task_start_date" class="input-large datepicker" type="text" data-date-format="dd/mm/yyyy" <!--#4DIF (timestamp_unix_toDate([Tasks]Timestamp_start)=!01/01/1970!)-->value=""<!--4DELSE-->value="<!--#4DVAR timestamp_unix_toDate([Tasks]Timestamp_start)-->"<!--4DENDIF--> id="task_start_date" readonly >
                            </div>
							
							<div class="field-box">
                                <label>Task End Date <span style="color:#6E829B">*</span></label>
								<input name="task_end_date" class="input-large datepicker" type="text" data-date-format="dd/mm/yyyy" <!--#4DIF (timestamp_unix_toDate ([Tasks]Timestamp_end)=!01/01/1970!)-->value=""<!--4DELSE-->value="<!--#4DVAR timestamp_unix_toDate ([Tasks]Timestamp_end)-->"<!--4DENDIF--> id="task_end_date" readonly >
                            </div>
							
							                 
							<div class="span12 field-box">
								<label>Task Estimated Hour <span style="color:#6E829B">*</span></label>
								<input name="Task_Estimated_Hour" class="span9 num" type="text" value="<!--#4DVAR [Tasks]task_estimated_hours-->" id="Task_Estimated_Hour">
							</div>                                                                 
							<div class="span12 field-box">
								<label>Task Rate <span style="color:#6E829B">*</span></label>
								<input name="Task_Rate" class="span9 num" type="text" value="<!--#4DVAR [Tasks]task_rate-->" id="Task_Rate">
							</div>
							
<div class="field-box">
								<label>Status</label>
								<div class="ui-select span5">
									<Select name="Task_Status" id="Task_Status">
<!--HIT_EXECUTE _HIT_HTMLTXT:=Task_Status_HTMLPopup-->
									</select>                                     
								</div>
							</div>                  

<div class="field-box">
								<label>Assigned to</label>
								<div class="ui-select span5">
									<Select name="uuid_assigned_to" id="uuid_assigned_to">
<!--HIT_EXECUTE
_HIT_HTMLTXT:=""
QUERY([Employees];[Employees]emp_active=True)
ORDER BY([Employees];[Employees]emp_last_name;>)

For (_HIT_COUNTER;1;Records in selection([Employees]))
_HIT_HTMLTXT:=_HIT_HTMLTXT+"<option value=\""+[Employees]uuid+"\""
If ([Tasks]uuid_assigned_to=[Employees]uuid)
_HIT_HTMLTXT:=_HIT_HTMLTXT+" selected"
Else 
End if 
_HIT_HTMLTXT:=_HIT_HTMLTXT+">"+[Employees]emp_first_name+" "+[Employees]emp_last_name+"</option>"
NEXT RECORD([Employees])
End for 
-->
									</select>                                     
								</div>
							</div>                  

							<!-- 
<div class="span12 field-box">
								<label>Task Activate</label>
								<input style="margin-left: -22%;" type="checkbox" name="Task_Activate" value=""><br>
							</div>
 -->
							<div class="field-box">
                                <label>Task Active</label>
                                <div class="ui-select span5">
									<Select name="Task_Active" id="Task_Active" name="Task_Active">
										<option value="Active" <!--#4DIF ([Tasks]task_active=True)-->selected<!--4DELSE--><!--4DENDIF-->>Active</option>
										<option value="Done" <!--#4DIF ([Tasks]task_active=false)-->selected<!--4DELSE--><!--4DENDIF-->>Done</option>
									</select>                                     
                                </div>
                            </div>
							<!--#4DIF (Records in selection([Tasks])=1)-->
							<div class="span12 field-box">
								<h3>Notes</h3><br>
								
								<!--#4DLOOP [Task_Notes]--><!-- row -->
								<div class="notes">
									<label>User Name (<!--HIT_EXECUTE _HIT_HTMLTXT:=timestamp_unix_toGMT ([Task_Notes]Timestamp_created)-->)</label>
									<input class="note_uuid" type="hidden" value="<!--#4DHTMLVAR [Task_Notes]uuid-->" />
									<textarea name="note" class="span8 note" rows="3" id="note" readonly> <!--#4DHTMLVAR [Task_Notes]Task_Note--></textarea>
									<button type="button" id="edit" class="btn-glow" onClick="editNote($(this))">Edit Note</button>&nbsp;
									<button type="button" id="delete" class="btn-glow" onClick="deleteNote($(this))">Delete</button>
									<button type="button" id="save" class="btn-glow" onClick="saveNote($(this))" style="display:none">Save Note</button>
									<button type="button" id="cancel" class="btn-glow" onClick="cancelNote($(this))" style="display:none">Cancel</button>
								</div>
								<!--#4DENDLOOP-->
								
								<div class='notes_end'></div>
							</div>
							<div class="span12 field-box">
								<label>Add Note</label>
								<textarea name="Add_note" class="span8" rows="3" id="Add_note"></textarea>
								<button type="button" id="add" class="btn-glow" onClick="addNote()">Add Note</button>
							</div>
							<!--#4DELSE--><!--#4DENDIF-->
							<div class="span11 field-box" style="text-align: center;">
								<input type="submit" class="btn-glow primary" value="Submit">
								<span>OR</span>
								<a href="tasks.shtml">Cancel</a>
							</div>
						</form>
                    </div>
				</div>
            </div>
        </div>
    </div>
    <!-- end main container -->

	<!-- scripts -->
    <!--#4DSCRIPT/_HIT_LoadInclude/hit/includes/footer.shtml--> 
	<script src="js/ui/jquery-ui.js"></script>
	<script src="js/bootstrap.datepicker.js"></script>
	<script src="js/jquery.uniform.min.js"></script>
	
	<!-- call this page plugins -->

<script language="javascript">
function ValidateForm () {

if (document.TaskForm.Task_Name.value=="")
{ 
	alert('Please Specify Task Name');
	document.TaskForm.Task_Name.focus() ;
	return false;
}
if (document.TaskForm.Project_ID.value=="")
{ 
	alert('Please Specify Project Name');
	document.TaskForm.Project_ID.focus() ;
	return false;
}
if (document.TaskForm.task_start_date.value=="")
{ 
	alert('Please Specify Task Start Date');
	document.TaskForm.task_start_date.focus() ;
	return false;
}
if (document.TaskForm.task_end_date.value=="")
{ 
	alert('Please Specify Task End Date');
	document.TaskForm.task_end_date.focus() ;
	return false;
}
if (document.TaskForm.Task_Estimated_Hour.value=="" || document.TaskForm.Task_Estimated_Hour.value==0)
{ 
	alert('Please Specify Task Estimated Hour');
	document.TaskForm.task_end_date.focus() ;
	return false;
}
if (document.TaskForm.Task_Rate.value=="" || document.TaskForm.Task_Rate.value==0)
{ 
	alert('Please Specify Task Rate');
	document.TaskForm.task_end_date.focus() ;
	return false;

}
}

function editNote(x)
{
	var note = x.parents('.notes');
	note.find("#note").attr('readonly',false);
	note.find('#edit').hide();
	note.find('#delete').hide();
	note.find('#save').show();
	note.find('#cancel').show();
}
function cancelNote(x) {
	var note = x.parents('.notes');
	note.find('#edit').show();
	note.find('#delete').show();
	note.find('#save').hide();
	note.find("#note").attr('readonly',true);
	note.find('#cancel').hide();
}
function deleteNote(x) {
	var note = x.parents('.notes');
	var uuid_note= note.find('.note_uuid').val();
	var Task_uuid=$('#Task_uuid').val();

	var dataString = 'deletenotes_uuid='+uuid_note+'&redirect=false';

	$.ajax({
	type: "POST",
	url: "deletetasksnotes.cgi",
	data: dataString,
	cache: false,
	success: function(html)
	{
		note.hide();
	}
	});
}	
function saveNote(x)
{	
	var note = x.parents('.notes');
	var uuid_note= note.find('.note_uuid').val();
	var add_note=note.find('#note').val();
	var Task_uuid=$('#Task_uuid').val();
	
	if(add_note!='') {
		var dataString = 'note='+add_note+'&tasknote_uuid='+uuid_note+'&uuid_task='+Task_uuid+'&redirect=false';
		
		$.ajax({
		type: "GET",
		url: "savetasknotes.cgi",
		data: dataString,
		cache: false,
		success: function(html)
		{
			//row.find('.item_uuid').val(html);
			//document.getElementById("note").readOnly=true;
			note.find("#note").attr('readonly',true);
			note.find('#save').hide();
			note.find('#cancel').hide();
			note.find('#edit').show();
			note.find('#delete').show();
		}
		});
	}else{
		alert('Please add some note');
	}
}
function addNote()
{
	var add_note=$('#Add_note').val();
	var Task_uuid=$('#Task_uuid').val();
	if(add_note!='') {
		var dataString = 'note='+add_note+'&uuid_task='+Task_uuid+'&redirect=false';
	
		$.ajax({
		type: "GET",
		url: "savetasknotes.cgi",
		data: dataString,
		cache: false,
		success: function(html)
		{
			//alert(html);
			var result=html.split(",");
			var note_uuid= result[0];
			var date_time= result[1]+','+result[2];
			$("#Add_note").val("");
			$(".notes_end").before('<div class="notes"><label>User Name ('+date_time+')</label><input class="note_uuid" type="hidden" value="'+note_uuid+'" /><textarea name="note" class="span8 note" rows="3" id="note" readonly>'+add_note+'</textarea><button type="button" id="edit" class="btn-glow" onclick="editNote($(this))">Edit Note</button><button type="button" id="delete" class="btn-glow" onclick="deleteNote($(this))">Delete</button><button type="button" id="save" class="btn-glow" onclick="saveNote($(this))" style="display:none">Save Note</button><button type="button" id="cancel" class="btn-glow" onclick="cancelNote($(this))" style="display:none">Cancel</button>');
		}
		});
	}else{
		alert('Please add some note');
	}
}

</script>

    <script type="text/javascript">
        $(function () {

            // add uniform plugin styles to html elements
            $("input:checkbox").uniform();

            // datepicker plugin
            $('.datepicker').datepicker().on('changeDate', function (ev) {
                $(this).datepicker('hide');
            });
			$('.num').keypress(function(e){
				var k = e.which;
				/* numeric inputs can come from the keypad or the numeric row at the top */
				 if ((k<48 || k>57) && (k!=46) && (k!=8) && (k!=0)) {
					e.preventDefault();
					//alert("Allowed characters are 0-9, +, -, (, )");
					return false;
				}
			
			});
			
        });
    </script> 
	<script>
	 var xhr;
  (function( $ ) {
    $.widget( "custom.combobox", {
      _create: function() {
        this.wrapper = $( "<span>" )
          .addClass( "custom-combobox" )
          .insertAfter( this.element );
 
        this.element.hide();
        this._createAutocomplete();
        this._createShowAllButton();
      },
 
      _createAutocomplete: function() {
        var selected = this.element.children( ":selected" ),
          value = selected.val() ? selected.text() : "";
 
        this.input = $( "<input>" )
          .appendTo( this.wrapper )
          .val( value )
          .attr( "title", "" )
          .addClass( "custom-combobox-input ui-widget ui-widget-content ui-state-default ui-corner-left" )
          .autocomplete({
            delay: 0,
            minLength: 0,
            source: $.proxy( this, "_source" )
          })
          .tooltip({
            tooltipClass: "ui-state-highlight"
          });
 
        this._on( this.input, {
          autocompleteselect: function( event, ui ) {
		  	//alert("show all");
            ui.item.option.selected = true;
			
            this._trigger( "select", event, {
              item: ui.item.option
            });
          },
 
          autocompletechange: "_removeIfInvalid"
        });
      },
 
      _createShowAllButton: function() {
        var input = this.input,
          wasOpen = false;
 
        $( "<a>" )
          .attr( "tabIndex", -1 )
          .attr( "title", "Show All Items" )
          .tooltip()
          .appendTo( this.wrapper )
          .button({
            icons: {
              primary: "ui-icon-triangle-1-s"
            },
            text: false
          })
          .removeClass( "ui-corner-all" )
          .addClass( "custom-combobox-toggle ui-corner-right" )
          .mousedown(function() {
            wasOpen = input.autocomplete( "widget" ).is( ":visible" );
          })
          .click(function() {
            input.focus();
 
            // Close if already visible
            if ( wasOpen ) {
              return;
            }
 
            // Pass last search string as value to search for, displaying last results
            input.autocomplete( "search", 'SHOWALL' );
          });
      },
 
      _source: function( request, response ) {
        //var matcher = new RegExp( $.ui.autocomplete.escapeRegex(request.term), "i" );
		var ele_select= this.element;
		if(request.term=='SHOWALL'){
			response(ele_select.children( "option" ).map(function() {
          var text = $( this ).text();
		 var value= $( this ).val();
          //if ( this.value && ( !request.term || matcher.test(text) ) )
            return {
              label: text,
              value: text,
              option: this
            };
        }) );
		
		}
		else
		{
		var jsonRow = 'getprojectsonsearch.cgi?srch='+request.term;
		

		//alert(jsonRowURLStr);
		if(xhr) xhr.abort();
		xhr=$.getJSON(jsonRow,function(result){
			
			if(result){
				var html='<option value=""></option>';

				$.each(result, function(i,item)
				{
					html += '<option value="'+item.id+'">'+item.value+'</option>';
				});
				ele_select.html(html);
				
				
				response(ele_select.children( "option" ).map(function() {
          var text = $( this ).text();
		 var value= $( this ).val();
          //if ( this.value && ( !request.term || matcher.test(text) ) )
            return {
              label: text,
              value: text,
              option: this
            };
        }) );
				
				
			}
		});
       
	  } 
		
      },
 
      _removeIfInvalid: function( event, ui ) {
 
        // Selected an item, nothing to do
        if ( ui.item ) {

          return;
        }
 
        // Search for a match (case-insensitive)
        var value = this.input.val(),
          valueLowerCase = value.toLowerCase(),
          valid = false;
        this.element.children( "option" ).each(function() {
          if ( $( this ).text().toLowerCase() === valueLowerCase ) {
            this.selected = valid = true;	
			
            return false;
          }
        });
 
        // Found a match, nothing to do
        if ( valid ) {
          return;
        }
 
        // Remove invalid value
        this.input
          .val( "" )
          .attr( "title", value + " didn't match any item" )
          .tooltip( "open" );
        this.element.val( "" );
        this._delay(function() {
          this.input.tooltip( "close" ).attr( "title", "" );
        }, 2500 );
        this.input.data( "ui-autocomplete" ).term = "";
      },
 
      _destroy: function() {
        this.wrapper.remove();
        this.element.show();
      }
    });
  })( jQuery );
 
  $(function() {
    $( "#Project_ID" ).combobox();
   
	
  });

  </script>
	
</body>
</html>